// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: common/logic.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace GrpcServer {

  /// <summary>Holder for reflection information generated from common/logic.proto</summary>
  public static partial class LogicReflection {

    #region Descriptor
    /// <summary>File descriptor for common/logic.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static LogicReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChJjb21tb24vbG9naWMucHJvdG8SD3R5cGVkYi5wcm90b2NvbBoTY29tbW9u",
            "L2Fuc3dlci5wcm90byLXBQoMTG9naWNNYW5hZ2VyGtcBCgNSZXESQQoMZ2V0",
            "X3J1bGVfcmVxGAEgASgLMikudHlwZWRiLnByb3RvY29sLkxvZ2ljTWFuYWdl",
            "ci5HZXRSdWxlLlJlcUgAEkEKDHB1dF9ydWxlX3JlcRgCIAEoCzIpLnR5cGVk",
            "Yi5wcm90b2NvbC5Mb2dpY01hbmFnZXIuUHV0UnVsZS5SZXFIABJDCg1nZXRf",
            "cnVsZXNfcmVxGAMgASgLMioudHlwZWRiLnByb3RvY29sLkxvZ2ljTWFuYWdl",
            "ci5HZXRSdWxlcy5SZXFIAEIFCgNyZXEakgEKA1JlcxJBCgxnZXRfcnVsZV9y",
            "ZXMYASABKAsyKS50eXBlZGIucHJvdG9jb2wuTG9naWNNYW5hZ2VyLkdldFJ1",
            "bGUuUmVzSAASQQoMcHV0X3J1bGVfcmVzGAIgASgLMikudHlwZWRiLnByb3Rv",
            "Y29sLkxvZ2ljTWFuYWdlci5QdXRSdWxlLlJlc0gAQgUKA3JlcxpVCgdSZXNQ",
            "YXJ0EkoKEmdldF9ydWxlc19yZXNfcGFydBgBIAEoCzIuLnR5cGVkYi5wcm90",
            "b2NvbC5Mb2dpY01hbmFnZXIuR2V0UnVsZXMuUmVzUGFydBpUCgdHZXRSdWxl",
            "GhQKA1JlcRINCgVsYWJlbBgBIAEoCRozCgNSZXMSJQoEcnVsZRgBIAEoCzIV",
            "LnR5cGVkYi5wcm90b2NvbC5SdWxlSABCBQoDcmVzGmcKB1B1dFJ1bGUaMAoD",
            "UmVxEg0KBWxhYmVsGAEgASgJEgwKBHdoZW4YAiABKAkSDAoEdGhlbhgDIAEo",
            "CRoqCgNSZXMSIwoEcnVsZRgBIAEoCzIVLnR5cGVkYi5wcm90b2NvbC5SdWxl",
            "GkIKCEdldFJ1bGVzGgUKA1JlcRovCgdSZXNQYXJ0EiQKBXJ1bGVzGAEgAygL",
            "MhUudHlwZWRiLnByb3RvY29sLlJ1bGUinQMKBFJ1bGUSDQoFbGFiZWwYASAB",
            "KAkSDAoEd2hlbhgCIAEoCRIMCgR0aGVuGAMgASgJGpoBCgNSZXESDQoFbGFi",
            "ZWwYASABKAkSOwoPcnVsZV9kZWxldGVfcmVxGGQgASgLMiAudHlwZWRiLnBy",
            "b3RvY29sLlJ1bGUuRGVsZXRlLlJlcUgAEkAKEnJ1bGVfc2V0X2xhYmVsX3Jl",
            "cRhlIAEoCzIiLnR5cGVkYi5wcm90b2NvbC5SdWxlLlNldExhYmVsLlJlcUgA",
            "QgUKA3JlcRqLAQoDUmVzEjsKD3J1bGVfZGVsZXRlX3JlcxhkIAEoCzIgLnR5",
            "cGVkYi5wcm90b2NvbC5SdWxlLkRlbGV0ZS5SZXNIABJAChJydWxlX3NldF9s",
            "YWJlbF9yZXMYZSABKAsyIi50eXBlZGIucHJvdG9jb2wuUnVsZS5TZXRMYWJl",
            "bC5SZXNIAEIFCgNyZXMaFgoGRGVsZXRlGgUKA1JlcRoFCgNSZXMaJwoIU2V0",
            "TGFiZWwaFAoDUmVxEg0KBWxhYmVsGAEgASgJGgUKA1JlcyLIAgoLRXhwbGFu",
            "YXRpb24SIwoEcnVsZRgBIAEoCzIVLnR5cGVkYi5wcm90b2NvbC5SdWxlEkEK",
            "C3Zhcl9tYXBwaW5nGAIgAygLMiwudHlwZWRiLnByb3RvY29sLkV4cGxhbmF0",
            "aW9uLlZhck1hcHBpbmdFbnRyeRIuCgljb25kaXRpb24YAyABKAsyGy50eXBl",
            "ZGIucHJvdG9jb2wuQ29uY2VwdE1hcBIvCgpjb25jbHVzaW9uGAQgASgLMhsu",
            "dHlwZWRiLnByb3RvY29sLkNvbmNlcHRNYXAaVwoPVmFyTWFwcGluZ0VudHJ5",
            "EgsKA2tleRgBIAEoCRIzCgV2YWx1ZRgCIAEoCzIkLnR5cGVkYi5wcm90b2Nv",
            "bC5FeHBsYW5hdGlvbi5WYXJMaXN0OgI4ARoXCgdWYXJMaXN0EgwKBHZhcnMY",
            "ASADKAlCNgobY29tLnZhdGljbGUudHlwZWRiLnByb3RvY29sQgpMb2dpY1By",
            "b3RvqgIKR3JwY1NlcnZlcmIGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::GrpcServer.AnswerReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::GrpcServer.LogicManager), global::GrpcServer.LogicManager.Parser, null, null, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::GrpcServer.LogicManager.Types.Req), global::GrpcServer.LogicManager.Types.Req.Parser, new[]{ "GetRuleReq", "PutRuleReq", "GetRulesReq" }, new[]{ "Req" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GrpcServer.LogicManager.Types.Res), global::GrpcServer.LogicManager.Types.Res.Parser, new[]{ "GetRuleRes", "PutRuleRes" }, new[]{ "Res" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GrpcServer.LogicManager.Types.ResPart), global::GrpcServer.LogicManager.Types.ResPart.Parser, new[]{ "GetRulesResPart" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GrpcServer.LogicManager.Types.GetRule), global::GrpcServer.LogicManager.Types.GetRule.Parser, null, null, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::GrpcServer.LogicManager.Types.GetRule.Types.Req), global::GrpcServer.LogicManager.Types.GetRule.Types.Req.Parser, new[]{ "Label" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GrpcServer.LogicManager.Types.GetRule.Types.Res), global::GrpcServer.LogicManager.Types.GetRule.Types.Res.Parser, new[]{ "Rule" }, new[]{ "Res" }, null, null, null)}),
            new pbr::GeneratedClrTypeInfo(typeof(global::GrpcServer.LogicManager.Types.PutRule), global::GrpcServer.LogicManager.Types.PutRule.Parser, null, null, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::GrpcServer.LogicManager.Types.PutRule.Types.Req), global::GrpcServer.LogicManager.Types.PutRule.Types.Req.Parser, new[]{ "Label", "When", "Then" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GrpcServer.LogicManager.Types.PutRule.Types.Res), global::GrpcServer.LogicManager.Types.PutRule.Types.Res.Parser, new[]{ "Rule" }, null, null, null, null)}),
            new pbr::GeneratedClrTypeInfo(typeof(global::GrpcServer.LogicManager.Types.GetRules), global::GrpcServer.LogicManager.Types.GetRules.Parser, null, null, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::GrpcServer.LogicManager.Types.GetRules.Types.Req), global::GrpcServer.LogicManager.Types.GetRules.Types.Req.Parser, null, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GrpcServer.LogicManager.Types.GetRules.Types.ResPart), global::GrpcServer.LogicManager.Types.GetRules.Types.ResPart.Parser, new[]{ "Rules" }, null, null, null, null)})}),
            new pbr::GeneratedClrTypeInfo(typeof(global::GrpcServer.Rule), global::GrpcServer.Rule.Parser, new[]{ "Label", "When", "Then" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::GrpcServer.Rule.Types.Req), global::GrpcServer.Rule.Types.Req.Parser, new[]{ "Label", "RuleDeleteReq", "RuleSetLabelReq" }, new[]{ "Req" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GrpcServer.Rule.Types.Res), global::GrpcServer.Rule.Types.Res.Parser, new[]{ "RuleDeleteRes", "RuleSetLabelRes" }, new[]{ "Res" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GrpcServer.Rule.Types.Delete), global::GrpcServer.Rule.Types.Delete.Parser, null, null, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::GrpcServer.Rule.Types.Delete.Types.Req), global::GrpcServer.Rule.Types.Delete.Types.Req.Parser, null, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GrpcServer.Rule.Types.Delete.Types.Res), global::GrpcServer.Rule.Types.Delete.Types.Res.Parser, null, null, null, null, null)}),
            new pbr::GeneratedClrTypeInfo(typeof(global::GrpcServer.Rule.Types.SetLabel), global::GrpcServer.Rule.Types.SetLabel.Parser, null, null, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::GrpcServer.Rule.Types.SetLabel.Types.Req), global::GrpcServer.Rule.Types.SetLabel.Types.Req.Parser, new[]{ "Label" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GrpcServer.Rule.Types.SetLabel.Types.Res), global::GrpcServer.Rule.Types.SetLabel.Types.Res.Parser, null, null, null, null, null)})}),
            new pbr::GeneratedClrTypeInfo(typeof(global::GrpcServer.Explanation), global::GrpcServer.Explanation.Parser, new[]{ "Rule", "VarMapping", "Condition", "Conclusion" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, new pbr::GeneratedClrTypeInfo(typeof(global::GrpcServer.Explanation.Types.VarList), global::GrpcServer.Explanation.Types.VarList.Parser, new[]{ "Vars" }, null, null, null, null)})
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class LogicManager : pb::IMessage<LogicManager>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<LogicManager> _parser = new pb::MessageParser<LogicManager>(() => new LogicManager());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<LogicManager> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GrpcServer.LogicReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LogicManager() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LogicManager(LogicManager other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LogicManager Clone() {
      return new LogicManager(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as LogicManager);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(LogicManager other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(LogicManager other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the LogicManager message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public sealed partial class Req : pb::IMessage<Req>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<Req> _parser = new pb::MessageParser<Req>(() => new Req());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<Req> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::GrpcServer.LogicManager.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Req() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Req(Req other) : this() {
          switch (other.ReqCase) {
            case ReqOneofCase.GetRuleReq:
              GetRuleReq = other.GetRuleReq.Clone();
              break;
            case ReqOneofCase.PutRuleReq:
              PutRuleReq = other.PutRuleReq.Clone();
              break;
            case ReqOneofCase.GetRulesReq:
              GetRulesReq = other.GetRulesReq.Clone();
              break;
          }

          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Req Clone() {
          return new Req(this);
        }

        /// <summary>Field number for the "get_rule_req" field.</summary>
        public const int GetRuleReqFieldNumber = 1;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::GrpcServer.LogicManager.Types.GetRule.Types.Req GetRuleReq {
          get { return reqCase_ == ReqOneofCase.GetRuleReq ? (global::GrpcServer.LogicManager.Types.GetRule.Types.Req) req_ : null; }
          set {
            req_ = value;
            reqCase_ = value == null ? ReqOneofCase.None : ReqOneofCase.GetRuleReq;
          }
        }

        /// <summary>Field number for the "put_rule_req" field.</summary>
        public const int PutRuleReqFieldNumber = 2;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::GrpcServer.LogicManager.Types.PutRule.Types.Req PutRuleReq {
          get { return reqCase_ == ReqOneofCase.PutRuleReq ? (global::GrpcServer.LogicManager.Types.PutRule.Types.Req) req_ : null; }
          set {
            req_ = value;
            reqCase_ = value == null ? ReqOneofCase.None : ReqOneofCase.PutRuleReq;
          }
        }

        /// <summary>Field number for the "get_rules_req" field.</summary>
        public const int GetRulesReqFieldNumber = 3;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::GrpcServer.LogicManager.Types.GetRules.Types.Req GetRulesReq {
          get { return reqCase_ == ReqOneofCase.GetRulesReq ? (global::GrpcServer.LogicManager.Types.GetRules.Types.Req) req_ : null; }
          set {
            req_ = value;
            reqCase_ = value == null ? ReqOneofCase.None : ReqOneofCase.GetRulesReq;
          }
        }

        private object req_;
        /// <summary>Enum of possible cases for the "req" oneof.</summary>
        public enum ReqOneofCase {
          None = 0,
          GetRuleReq = 1,
          PutRuleReq = 2,
          GetRulesReq = 3,
        }
        private ReqOneofCase reqCase_ = ReqOneofCase.None;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ReqOneofCase ReqCase {
          get { return reqCase_; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void ClearReq() {
          reqCase_ = ReqOneofCase.None;
          req_ = null;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as Req);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(Req other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (!object.Equals(GetRuleReq, other.GetRuleReq)) return false;
          if (!object.Equals(PutRuleReq, other.PutRuleReq)) return false;
          if (!object.Equals(GetRulesReq, other.GetRulesReq)) return false;
          if (ReqCase != other.ReqCase) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (reqCase_ == ReqOneofCase.GetRuleReq) hash ^= GetRuleReq.GetHashCode();
          if (reqCase_ == ReqOneofCase.PutRuleReq) hash ^= PutRuleReq.GetHashCode();
          if (reqCase_ == ReqOneofCase.GetRulesReq) hash ^= GetRulesReq.GetHashCode();
          hash ^= (int) reqCase_;
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (reqCase_ == ReqOneofCase.GetRuleReq) {
            output.WriteRawTag(10);
            output.WriteMessage(GetRuleReq);
          }
          if (reqCase_ == ReqOneofCase.PutRuleReq) {
            output.WriteRawTag(18);
            output.WriteMessage(PutRuleReq);
          }
          if (reqCase_ == ReqOneofCase.GetRulesReq) {
            output.WriteRawTag(26);
            output.WriteMessage(GetRulesReq);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (reqCase_ == ReqOneofCase.GetRuleReq) {
            output.WriteRawTag(10);
            output.WriteMessage(GetRuleReq);
          }
          if (reqCase_ == ReqOneofCase.PutRuleReq) {
            output.WriteRawTag(18);
            output.WriteMessage(PutRuleReq);
          }
          if (reqCase_ == ReqOneofCase.GetRulesReq) {
            output.WriteRawTag(26);
            output.WriteMessage(GetRulesReq);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (reqCase_ == ReqOneofCase.GetRuleReq) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(GetRuleReq);
          }
          if (reqCase_ == ReqOneofCase.PutRuleReq) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(PutRuleReq);
          }
          if (reqCase_ == ReqOneofCase.GetRulesReq) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(GetRulesReq);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(Req other) {
          if (other == null) {
            return;
          }
          switch (other.ReqCase) {
            case ReqOneofCase.GetRuleReq:
              if (GetRuleReq == null) {
                GetRuleReq = new global::GrpcServer.LogicManager.Types.GetRule.Types.Req();
              }
              GetRuleReq.MergeFrom(other.GetRuleReq);
              break;
            case ReqOneofCase.PutRuleReq:
              if (PutRuleReq == null) {
                PutRuleReq = new global::GrpcServer.LogicManager.Types.PutRule.Types.Req();
              }
              PutRuleReq.MergeFrom(other.PutRuleReq);
              break;
            case ReqOneofCase.GetRulesReq:
              if (GetRulesReq == null) {
                GetRulesReq = new global::GrpcServer.LogicManager.Types.GetRules.Types.Req();
              }
              GetRulesReq.MergeFrom(other.GetRulesReq);
              break;
          }

          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                global::GrpcServer.LogicManager.Types.GetRule.Types.Req subBuilder = new global::GrpcServer.LogicManager.Types.GetRule.Types.Req();
                if (reqCase_ == ReqOneofCase.GetRuleReq) {
                  subBuilder.MergeFrom(GetRuleReq);
                }
                input.ReadMessage(subBuilder);
                GetRuleReq = subBuilder;
                break;
              }
              case 18: {
                global::GrpcServer.LogicManager.Types.PutRule.Types.Req subBuilder = new global::GrpcServer.LogicManager.Types.PutRule.Types.Req();
                if (reqCase_ == ReqOneofCase.PutRuleReq) {
                  subBuilder.MergeFrom(PutRuleReq);
                }
                input.ReadMessage(subBuilder);
                PutRuleReq = subBuilder;
                break;
              }
              case 26: {
                global::GrpcServer.LogicManager.Types.GetRules.Types.Req subBuilder = new global::GrpcServer.LogicManager.Types.GetRules.Types.Req();
                if (reqCase_ == ReqOneofCase.GetRulesReq) {
                  subBuilder.MergeFrom(GetRulesReq);
                }
                input.ReadMessage(subBuilder);
                GetRulesReq = subBuilder;
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 10: {
                global::GrpcServer.LogicManager.Types.GetRule.Types.Req subBuilder = new global::GrpcServer.LogicManager.Types.GetRule.Types.Req();
                if (reqCase_ == ReqOneofCase.GetRuleReq) {
                  subBuilder.MergeFrom(GetRuleReq);
                }
                input.ReadMessage(subBuilder);
                GetRuleReq = subBuilder;
                break;
              }
              case 18: {
                global::GrpcServer.LogicManager.Types.PutRule.Types.Req subBuilder = new global::GrpcServer.LogicManager.Types.PutRule.Types.Req();
                if (reqCase_ == ReqOneofCase.PutRuleReq) {
                  subBuilder.MergeFrom(PutRuleReq);
                }
                input.ReadMessage(subBuilder);
                PutRuleReq = subBuilder;
                break;
              }
              case 26: {
                global::GrpcServer.LogicManager.Types.GetRules.Types.Req subBuilder = new global::GrpcServer.LogicManager.Types.GetRules.Types.Req();
                if (reqCase_ == ReqOneofCase.GetRulesReq) {
                  subBuilder.MergeFrom(GetRulesReq);
                }
                input.ReadMessage(subBuilder);
                GetRulesReq = subBuilder;
                break;
              }
            }
          }
        }
        #endif

      }

      public sealed partial class Res : pb::IMessage<Res>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<Res> _parser = new pb::MessageParser<Res>(() => new Res());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<Res> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::GrpcServer.LogicManager.Descriptor.NestedTypes[1]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Res() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Res(Res other) : this() {
          switch (other.ResCase) {
            case ResOneofCase.GetRuleRes:
              GetRuleRes = other.GetRuleRes.Clone();
              break;
            case ResOneofCase.PutRuleRes:
              PutRuleRes = other.PutRuleRes.Clone();
              break;
          }

          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Res Clone() {
          return new Res(this);
        }

        /// <summary>Field number for the "get_rule_res" field.</summary>
        public const int GetRuleResFieldNumber = 1;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::GrpcServer.LogicManager.Types.GetRule.Types.Res GetRuleRes {
          get { return resCase_ == ResOneofCase.GetRuleRes ? (global::GrpcServer.LogicManager.Types.GetRule.Types.Res) res_ : null; }
          set {
            res_ = value;
            resCase_ = value == null ? ResOneofCase.None : ResOneofCase.GetRuleRes;
          }
        }

        /// <summary>Field number for the "put_rule_res" field.</summary>
        public const int PutRuleResFieldNumber = 2;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::GrpcServer.LogicManager.Types.PutRule.Types.Res PutRuleRes {
          get { return resCase_ == ResOneofCase.PutRuleRes ? (global::GrpcServer.LogicManager.Types.PutRule.Types.Res) res_ : null; }
          set {
            res_ = value;
            resCase_ = value == null ? ResOneofCase.None : ResOneofCase.PutRuleRes;
          }
        }

        private object res_;
        /// <summary>Enum of possible cases for the "res" oneof.</summary>
        public enum ResOneofCase {
          None = 0,
          GetRuleRes = 1,
          PutRuleRes = 2,
        }
        private ResOneofCase resCase_ = ResOneofCase.None;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ResOneofCase ResCase {
          get { return resCase_; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void ClearRes() {
          resCase_ = ResOneofCase.None;
          res_ = null;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as Res);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(Res other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (!object.Equals(GetRuleRes, other.GetRuleRes)) return false;
          if (!object.Equals(PutRuleRes, other.PutRuleRes)) return false;
          if (ResCase != other.ResCase) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (resCase_ == ResOneofCase.GetRuleRes) hash ^= GetRuleRes.GetHashCode();
          if (resCase_ == ResOneofCase.PutRuleRes) hash ^= PutRuleRes.GetHashCode();
          hash ^= (int) resCase_;
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (resCase_ == ResOneofCase.GetRuleRes) {
            output.WriteRawTag(10);
            output.WriteMessage(GetRuleRes);
          }
          if (resCase_ == ResOneofCase.PutRuleRes) {
            output.WriteRawTag(18);
            output.WriteMessage(PutRuleRes);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (resCase_ == ResOneofCase.GetRuleRes) {
            output.WriteRawTag(10);
            output.WriteMessage(GetRuleRes);
          }
          if (resCase_ == ResOneofCase.PutRuleRes) {
            output.WriteRawTag(18);
            output.WriteMessage(PutRuleRes);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (resCase_ == ResOneofCase.GetRuleRes) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(GetRuleRes);
          }
          if (resCase_ == ResOneofCase.PutRuleRes) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(PutRuleRes);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(Res other) {
          if (other == null) {
            return;
          }
          switch (other.ResCase) {
            case ResOneofCase.GetRuleRes:
              if (GetRuleRes == null) {
                GetRuleRes = new global::GrpcServer.LogicManager.Types.GetRule.Types.Res();
              }
              GetRuleRes.MergeFrom(other.GetRuleRes);
              break;
            case ResOneofCase.PutRuleRes:
              if (PutRuleRes == null) {
                PutRuleRes = new global::GrpcServer.LogicManager.Types.PutRule.Types.Res();
              }
              PutRuleRes.MergeFrom(other.PutRuleRes);
              break;
          }

          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                global::GrpcServer.LogicManager.Types.GetRule.Types.Res subBuilder = new global::GrpcServer.LogicManager.Types.GetRule.Types.Res();
                if (resCase_ == ResOneofCase.GetRuleRes) {
                  subBuilder.MergeFrom(GetRuleRes);
                }
                input.ReadMessage(subBuilder);
                GetRuleRes = subBuilder;
                break;
              }
              case 18: {
                global::GrpcServer.LogicManager.Types.PutRule.Types.Res subBuilder = new global::GrpcServer.LogicManager.Types.PutRule.Types.Res();
                if (resCase_ == ResOneofCase.PutRuleRes) {
                  subBuilder.MergeFrom(PutRuleRes);
                }
                input.ReadMessage(subBuilder);
                PutRuleRes = subBuilder;
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 10: {
                global::GrpcServer.LogicManager.Types.GetRule.Types.Res subBuilder = new global::GrpcServer.LogicManager.Types.GetRule.Types.Res();
                if (resCase_ == ResOneofCase.GetRuleRes) {
                  subBuilder.MergeFrom(GetRuleRes);
                }
                input.ReadMessage(subBuilder);
                GetRuleRes = subBuilder;
                break;
              }
              case 18: {
                global::GrpcServer.LogicManager.Types.PutRule.Types.Res subBuilder = new global::GrpcServer.LogicManager.Types.PutRule.Types.Res();
                if (resCase_ == ResOneofCase.PutRuleRes) {
                  subBuilder.MergeFrom(PutRuleRes);
                }
                input.ReadMessage(subBuilder);
                PutRuleRes = subBuilder;
                break;
              }
            }
          }
        }
        #endif

      }

      public sealed partial class ResPart : pb::IMessage<ResPart>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<ResPart> _parser = new pb::MessageParser<ResPart>(() => new ResPart());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<ResPart> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::GrpcServer.LogicManager.Descriptor.NestedTypes[2]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ResPart() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ResPart(ResPart other) : this() {
          getRulesResPart_ = other.getRulesResPart_ != null ? other.getRulesResPart_.Clone() : null;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ResPart Clone() {
          return new ResPart(this);
        }

        /// <summary>Field number for the "get_rules_res_part" field.</summary>
        public const int GetRulesResPartFieldNumber = 1;
        private global::GrpcServer.LogicManager.Types.GetRules.Types.ResPart getRulesResPart_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::GrpcServer.LogicManager.Types.GetRules.Types.ResPart GetRulesResPart {
          get { return getRulesResPart_; }
          set {
            getRulesResPart_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as ResPart);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(ResPart other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (!object.Equals(GetRulesResPart, other.GetRulesResPart)) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (getRulesResPart_ != null) hash ^= GetRulesResPart.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (getRulesResPart_ != null) {
            output.WriteRawTag(10);
            output.WriteMessage(GetRulesResPart);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (getRulesResPart_ != null) {
            output.WriteRawTag(10);
            output.WriteMessage(GetRulesResPart);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (getRulesResPart_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(GetRulesResPart);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(ResPart other) {
          if (other == null) {
            return;
          }
          if (other.getRulesResPart_ != null) {
            if (getRulesResPart_ == null) {
              GetRulesResPart = new global::GrpcServer.LogicManager.Types.GetRules.Types.ResPart();
            }
            GetRulesResPart.MergeFrom(other.GetRulesResPart);
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                if (getRulesResPart_ == null) {
                  GetRulesResPart = new global::GrpcServer.LogicManager.Types.GetRules.Types.ResPart();
                }
                input.ReadMessage(GetRulesResPart);
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 10: {
                if (getRulesResPart_ == null) {
                  GetRulesResPart = new global::GrpcServer.LogicManager.Types.GetRules.Types.ResPart();
                }
                input.ReadMessage(GetRulesResPart);
                break;
              }
            }
          }
        }
        #endif

      }

      public sealed partial class GetRule : pb::IMessage<GetRule>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<GetRule> _parser = new pb::MessageParser<GetRule>(() => new GetRule());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<GetRule> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::GrpcServer.LogicManager.Descriptor.NestedTypes[3]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public GetRule() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public GetRule(GetRule other) : this() {
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public GetRule Clone() {
          return new GetRule(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as GetRule);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(GetRule other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(GetRule other) {
          if (other == null) {
            return;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
            }
          }
        }
        #endif

        #region Nested types
        /// <summary>Container for nested types declared in the GetRule message type.</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static partial class Types {
          public sealed partial class Req : pb::IMessage<Req>
          #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              , pb::IBufferMessage
          #endif
          {
            private static readonly pb::MessageParser<Req> _parser = new pb::MessageParser<Req>(() => new Req());
            private pb::UnknownFieldSet _unknownFields;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pb::MessageParser<Req> Parser { get { return _parser; } }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pbr::MessageDescriptor Descriptor {
              get { return global::GrpcServer.LogicManager.Types.GetRule.Descriptor.NestedTypes[0]; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            pbr::MessageDescriptor pb::IMessage.Descriptor {
              get { return Descriptor; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public Req() {
              OnConstruction();
            }

            partial void OnConstruction();

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public Req(Req other) : this() {
              label_ = other.label_;
              _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public Req Clone() {
              return new Req(this);
            }

            /// <summary>Field number for the "label" field.</summary>
            public const int LabelFieldNumber = 1;
            private string label_ = "";
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public string Label {
              get { return label_; }
              set {
                label_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
              }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override bool Equals(object other) {
              return Equals(other as Req);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public bool Equals(Req other) {
              if (ReferenceEquals(other, null)) {
                return false;
              }
              if (ReferenceEquals(other, this)) {
                return true;
              }
              if (Label != other.Label) return false;
              return Equals(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override int GetHashCode() {
              int hash = 1;
              if (Label.Length != 0) hash ^= Label.GetHashCode();
              if (_unknownFields != null) {
                hash ^= _unknownFields.GetHashCode();
              }
              return hash;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override string ToString() {
              return pb::JsonFormatter.ToDiagnosticString(this);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void WriteTo(pb::CodedOutputStream output) {
            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              output.WriteRawMessage(this);
            #else
              if (Label.Length != 0) {
                output.WriteRawTag(10);
                output.WriteString(Label);
              }
              if (_unknownFields != null) {
                _unknownFields.WriteTo(output);
              }
            #endif
            }

            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
              if (Label.Length != 0) {
                output.WriteRawTag(10);
                output.WriteString(Label);
              }
              if (_unknownFields != null) {
                _unknownFields.WriteTo(ref output);
              }
            }
            #endif

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public int CalculateSize() {
              int size = 0;
              if (Label.Length != 0) {
                size += 1 + pb::CodedOutputStream.ComputeStringSize(Label);
              }
              if (_unknownFields != null) {
                size += _unknownFields.CalculateSize();
              }
              return size;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(Req other) {
              if (other == null) {
                return;
              }
              if (other.Label.Length != 0) {
                Label = other.Label;
              }
              _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(pb::CodedInputStream input) {
            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              input.ReadRawMessage(this);
            #else
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                    break;
                  case 10: {
                    Label = input.ReadString();
                    break;
                  }
                }
              }
            #endif
            }

            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                    break;
                  case 10: {
                    Label = input.ReadString();
                    break;
                  }
                }
              }
            }
            #endif

          }

          public sealed partial class Res : pb::IMessage<Res>
          #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              , pb::IBufferMessage
          #endif
          {
            private static readonly pb::MessageParser<Res> _parser = new pb::MessageParser<Res>(() => new Res());
            private pb::UnknownFieldSet _unknownFields;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pb::MessageParser<Res> Parser { get { return _parser; } }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pbr::MessageDescriptor Descriptor {
              get { return global::GrpcServer.LogicManager.Types.GetRule.Descriptor.NestedTypes[1]; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            pbr::MessageDescriptor pb::IMessage.Descriptor {
              get { return Descriptor; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public Res() {
              OnConstruction();
            }

            partial void OnConstruction();

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public Res(Res other) : this() {
              switch (other.ResCase) {
                case ResOneofCase.Rule:
                  Rule = other.Rule.Clone();
                  break;
              }

              _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public Res Clone() {
              return new Res(this);
            }

            /// <summary>Field number for the "rule" field.</summary>
            public const int RuleFieldNumber = 1;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public global::GrpcServer.Rule Rule {
              get { return resCase_ == ResOneofCase.Rule ? (global::GrpcServer.Rule) res_ : null; }
              set {
                res_ = value;
                resCase_ = value == null ? ResOneofCase.None : ResOneofCase.Rule;
              }
            }

            private object res_;
            /// <summary>Enum of possible cases for the "res" oneof.</summary>
            public enum ResOneofCase {
              None = 0,
              Rule = 1,
            }
            private ResOneofCase resCase_ = ResOneofCase.None;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public ResOneofCase ResCase {
              get { return resCase_; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void ClearRes() {
              resCase_ = ResOneofCase.None;
              res_ = null;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override bool Equals(object other) {
              return Equals(other as Res);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public bool Equals(Res other) {
              if (ReferenceEquals(other, null)) {
                return false;
              }
              if (ReferenceEquals(other, this)) {
                return true;
              }
              if (!object.Equals(Rule, other.Rule)) return false;
              if (ResCase != other.ResCase) return false;
              return Equals(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override int GetHashCode() {
              int hash = 1;
              if (resCase_ == ResOneofCase.Rule) hash ^= Rule.GetHashCode();
              hash ^= (int) resCase_;
              if (_unknownFields != null) {
                hash ^= _unknownFields.GetHashCode();
              }
              return hash;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override string ToString() {
              return pb::JsonFormatter.ToDiagnosticString(this);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void WriteTo(pb::CodedOutputStream output) {
            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              output.WriteRawMessage(this);
            #else
              if (resCase_ == ResOneofCase.Rule) {
                output.WriteRawTag(10);
                output.WriteMessage(Rule);
              }
              if (_unknownFields != null) {
                _unknownFields.WriteTo(output);
              }
            #endif
            }

            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
              if (resCase_ == ResOneofCase.Rule) {
                output.WriteRawTag(10);
                output.WriteMessage(Rule);
              }
              if (_unknownFields != null) {
                _unknownFields.WriteTo(ref output);
              }
            }
            #endif

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public int CalculateSize() {
              int size = 0;
              if (resCase_ == ResOneofCase.Rule) {
                size += 1 + pb::CodedOutputStream.ComputeMessageSize(Rule);
              }
              if (_unknownFields != null) {
                size += _unknownFields.CalculateSize();
              }
              return size;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(Res other) {
              if (other == null) {
                return;
              }
              switch (other.ResCase) {
                case ResOneofCase.Rule:
                  if (Rule == null) {
                    Rule = new global::GrpcServer.Rule();
                  }
                  Rule.MergeFrom(other.Rule);
                  break;
              }

              _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(pb::CodedInputStream input) {
            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              input.ReadRawMessage(this);
            #else
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                    break;
                  case 10: {
                    global::GrpcServer.Rule subBuilder = new global::GrpcServer.Rule();
                    if (resCase_ == ResOneofCase.Rule) {
                      subBuilder.MergeFrom(Rule);
                    }
                    input.ReadMessage(subBuilder);
                    Rule = subBuilder;
                    break;
                  }
                }
              }
            #endif
            }

            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                    break;
                  case 10: {
                    global::GrpcServer.Rule subBuilder = new global::GrpcServer.Rule();
                    if (resCase_ == ResOneofCase.Rule) {
                      subBuilder.MergeFrom(Rule);
                    }
                    input.ReadMessage(subBuilder);
                    Rule = subBuilder;
                    break;
                  }
                }
              }
            }
            #endif

          }

        }
        #endregion

      }

      public sealed partial class PutRule : pb::IMessage<PutRule>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<PutRule> _parser = new pb::MessageParser<PutRule>(() => new PutRule());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<PutRule> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::GrpcServer.LogicManager.Descriptor.NestedTypes[4]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public PutRule() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public PutRule(PutRule other) : this() {
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public PutRule Clone() {
          return new PutRule(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as PutRule);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(PutRule other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(PutRule other) {
          if (other == null) {
            return;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
            }
          }
        }
        #endif

        #region Nested types
        /// <summary>Container for nested types declared in the PutRule message type.</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static partial class Types {
          public sealed partial class Req : pb::IMessage<Req>
          #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              , pb::IBufferMessage
          #endif
          {
            private static readonly pb::MessageParser<Req> _parser = new pb::MessageParser<Req>(() => new Req());
            private pb::UnknownFieldSet _unknownFields;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pb::MessageParser<Req> Parser { get { return _parser; } }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pbr::MessageDescriptor Descriptor {
              get { return global::GrpcServer.LogicManager.Types.PutRule.Descriptor.NestedTypes[0]; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            pbr::MessageDescriptor pb::IMessage.Descriptor {
              get { return Descriptor; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public Req() {
              OnConstruction();
            }

            partial void OnConstruction();

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public Req(Req other) : this() {
              label_ = other.label_;
              when_ = other.when_;
              then_ = other.then_;
              _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public Req Clone() {
              return new Req(this);
            }

            /// <summary>Field number for the "label" field.</summary>
            public const int LabelFieldNumber = 1;
            private string label_ = "";
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public string Label {
              get { return label_; }
              set {
                label_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
              }
            }

            /// <summary>Field number for the "when" field.</summary>
            public const int WhenFieldNumber = 2;
            private string when_ = "";
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public string When {
              get { return when_; }
              set {
                when_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
              }
            }

            /// <summary>Field number for the "then" field.</summary>
            public const int ThenFieldNumber = 3;
            private string then_ = "";
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public string Then {
              get { return then_; }
              set {
                then_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
              }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override bool Equals(object other) {
              return Equals(other as Req);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public bool Equals(Req other) {
              if (ReferenceEquals(other, null)) {
                return false;
              }
              if (ReferenceEquals(other, this)) {
                return true;
              }
              if (Label != other.Label) return false;
              if (When != other.When) return false;
              if (Then != other.Then) return false;
              return Equals(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override int GetHashCode() {
              int hash = 1;
              if (Label.Length != 0) hash ^= Label.GetHashCode();
              if (When.Length != 0) hash ^= When.GetHashCode();
              if (Then.Length != 0) hash ^= Then.GetHashCode();
              if (_unknownFields != null) {
                hash ^= _unknownFields.GetHashCode();
              }
              return hash;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override string ToString() {
              return pb::JsonFormatter.ToDiagnosticString(this);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void WriteTo(pb::CodedOutputStream output) {
            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              output.WriteRawMessage(this);
            #else
              if (Label.Length != 0) {
                output.WriteRawTag(10);
                output.WriteString(Label);
              }
              if (When.Length != 0) {
                output.WriteRawTag(18);
                output.WriteString(When);
              }
              if (Then.Length != 0) {
                output.WriteRawTag(26);
                output.WriteString(Then);
              }
              if (_unknownFields != null) {
                _unknownFields.WriteTo(output);
              }
            #endif
            }

            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
              if (Label.Length != 0) {
                output.WriteRawTag(10);
                output.WriteString(Label);
              }
              if (When.Length != 0) {
                output.WriteRawTag(18);
                output.WriteString(When);
              }
              if (Then.Length != 0) {
                output.WriteRawTag(26);
                output.WriteString(Then);
              }
              if (_unknownFields != null) {
                _unknownFields.WriteTo(ref output);
              }
            }
            #endif

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public int CalculateSize() {
              int size = 0;
              if (Label.Length != 0) {
                size += 1 + pb::CodedOutputStream.ComputeStringSize(Label);
              }
              if (When.Length != 0) {
                size += 1 + pb::CodedOutputStream.ComputeStringSize(When);
              }
              if (Then.Length != 0) {
                size += 1 + pb::CodedOutputStream.ComputeStringSize(Then);
              }
              if (_unknownFields != null) {
                size += _unknownFields.CalculateSize();
              }
              return size;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(Req other) {
              if (other == null) {
                return;
              }
              if (other.Label.Length != 0) {
                Label = other.Label;
              }
              if (other.When.Length != 0) {
                When = other.When;
              }
              if (other.Then.Length != 0) {
                Then = other.Then;
              }
              _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(pb::CodedInputStream input) {
            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              input.ReadRawMessage(this);
            #else
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                    break;
                  case 10: {
                    Label = input.ReadString();
                    break;
                  }
                  case 18: {
                    When = input.ReadString();
                    break;
                  }
                  case 26: {
                    Then = input.ReadString();
                    break;
                  }
                }
              }
            #endif
            }

            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                    break;
                  case 10: {
                    Label = input.ReadString();
                    break;
                  }
                  case 18: {
                    When = input.ReadString();
                    break;
                  }
                  case 26: {
                    Then = input.ReadString();
                    break;
                  }
                }
              }
            }
            #endif

          }

          public sealed partial class Res : pb::IMessage<Res>
          #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              , pb::IBufferMessage
          #endif
          {
            private static readonly pb::MessageParser<Res> _parser = new pb::MessageParser<Res>(() => new Res());
            private pb::UnknownFieldSet _unknownFields;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pb::MessageParser<Res> Parser { get { return _parser; } }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pbr::MessageDescriptor Descriptor {
              get { return global::GrpcServer.LogicManager.Types.PutRule.Descriptor.NestedTypes[1]; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            pbr::MessageDescriptor pb::IMessage.Descriptor {
              get { return Descriptor; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public Res() {
              OnConstruction();
            }

            partial void OnConstruction();

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public Res(Res other) : this() {
              rule_ = other.rule_ != null ? other.rule_.Clone() : null;
              _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public Res Clone() {
              return new Res(this);
            }

            /// <summary>Field number for the "rule" field.</summary>
            public const int RuleFieldNumber = 1;
            private global::GrpcServer.Rule rule_;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public global::GrpcServer.Rule Rule {
              get { return rule_; }
              set {
                rule_ = value;
              }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override bool Equals(object other) {
              return Equals(other as Res);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public bool Equals(Res other) {
              if (ReferenceEquals(other, null)) {
                return false;
              }
              if (ReferenceEquals(other, this)) {
                return true;
              }
              if (!object.Equals(Rule, other.Rule)) return false;
              return Equals(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override int GetHashCode() {
              int hash = 1;
              if (rule_ != null) hash ^= Rule.GetHashCode();
              if (_unknownFields != null) {
                hash ^= _unknownFields.GetHashCode();
              }
              return hash;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override string ToString() {
              return pb::JsonFormatter.ToDiagnosticString(this);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void WriteTo(pb::CodedOutputStream output) {
            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              output.WriteRawMessage(this);
            #else
              if (rule_ != null) {
                output.WriteRawTag(10);
                output.WriteMessage(Rule);
              }
              if (_unknownFields != null) {
                _unknownFields.WriteTo(output);
              }
            #endif
            }

            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
              if (rule_ != null) {
                output.WriteRawTag(10);
                output.WriteMessage(Rule);
              }
              if (_unknownFields != null) {
                _unknownFields.WriteTo(ref output);
              }
            }
            #endif

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public int CalculateSize() {
              int size = 0;
              if (rule_ != null) {
                size += 1 + pb::CodedOutputStream.ComputeMessageSize(Rule);
              }
              if (_unknownFields != null) {
                size += _unknownFields.CalculateSize();
              }
              return size;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(Res other) {
              if (other == null) {
                return;
              }
              if (other.rule_ != null) {
                if (rule_ == null) {
                  Rule = new global::GrpcServer.Rule();
                }
                Rule.MergeFrom(other.Rule);
              }
              _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(pb::CodedInputStream input) {
            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              input.ReadRawMessage(this);
            #else
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                    break;
                  case 10: {
                    if (rule_ == null) {
                      Rule = new global::GrpcServer.Rule();
                    }
                    input.ReadMessage(Rule);
                    break;
                  }
                }
              }
            #endif
            }

            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                    break;
                  case 10: {
                    if (rule_ == null) {
                      Rule = new global::GrpcServer.Rule();
                    }
                    input.ReadMessage(Rule);
                    break;
                  }
                }
              }
            }
            #endif

          }

        }
        #endregion

      }

      public sealed partial class GetRules : pb::IMessage<GetRules>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<GetRules> _parser = new pb::MessageParser<GetRules>(() => new GetRules());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<GetRules> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::GrpcServer.LogicManager.Descriptor.NestedTypes[5]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public GetRules() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public GetRules(GetRules other) : this() {
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public GetRules Clone() {
          return new GetRules(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as GetRules);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(GetRules other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(GetRules other) {
          if (other == null) {
            return;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
            }
          }
        }
        #endif

        #region Nested types
        /// <summary>Container for nested types declared in the GetRules message type.</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static partial class Types {
          public sealed partial class Req : pb::IMessage<Req>
          #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              , pb::IBufferMessage
          #endif
          {
            private static readonly pb::MessageParser<Req> _parser = new pb::MessageParser<Req>(() => new Req());
            private pb::UnknownFieldSet _unknownFields;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pb::MessageParser<Req> Parser { get { return _parser; } }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pbr::MessageDescriptor Descriptor {
              get { return global::GrpcServer.LogicManager.Types.GetRules.Descriptor.NestedTypes[0]; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            pbr::MessageDescriptor pb::IMessage.Descriptor {
              get { return Descriptor; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public Req() {
              OnConstruction();
            }

            partial void OnConstruction();

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public Req(Req other) : this() {
              _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public Req Clone() {
              return new Req(this);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override bool Equals(object other) {
              return Equals(other as Req);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public bool Equals(Req other) {
              if (ReferenceEquals(other, null)) {
                return false;
              }
              if (ReferenceEquals(other, this)) {
                return true;
              }
              return Equals(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override int GetHashCode() {
              int hash = 1;
              if (_unknownFields != null) {
                hash ^= _unknownFields.GetHashCode();
              }
              return hash;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override string ToString() {
              return pb::JsonFormatter.ToDiagnosticString(this);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void WriteTo(pb::CodedOutputStream output) {
            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              output.WriteRawMessage(this);
            #else
              if (_unknownFields != null) {
                _unknownFields.WriteTo(output);
              }
            #endif
            }

            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
              if (_unknownFields != null) {
                _unknownFields.WriteTo(ref output);
              }
            }
            #endif

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public int CalculateSize() {
              int size = 0;
              if (_unknownFields != null) {
                size += _unknownFields.CalculateSize();
              }
              return size;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(Req other) {
              if (other == null) {
                return;
              }
              _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(pb::CodedInputStream input) {
            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              input.ReadRawMessage(this);
            #else
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                    break;
                }
              }
            #endif
            }

            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                    break;
                }
              }
            }
            #endif

          }

          public sealed partial class ResPart : pb::IMessage<ResPart>
          #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              , pb::IBufferMessage
          #endif
          {
            private static readonly pb::MessageParser<ResPart> _parser = new pb::MessageParser<ResPart>(() => new ResPart());
            private pb::UnknownFieldSet _unknownFields;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pb::MessageParser<ResPart> Parser { get { return _parser; } }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pbr::MessageDescriptor Descriptor {
              get { return global::GrpcServer.LogicManager.Types.GetRules.Descriptor.NestedTypes[1]; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            pbr::MessageDescriptor pb::IMessage.Descriptor {
              get { return Descriptor; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public ResPart() {
              OnConstruction();
            }

            partial void OnConstruction();

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public ResPart(ResPart other) : this() {
              rules_ = other.rules_.Clone();
              _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public ResPart Clone() {
              return new ResPart(this);
            }

            /// <summary>Field number for the "rules" field.</summary>
            public const int RulesFieldNumber = 1;
            private static readonly pb::FieldCodec<global::GrpcServer.Rule> _repeated_rules_codec
                = pb::FieldCodec.ForMessage(10, global::GrpcServer.Rule.Parser);
            private readonly pbc::RepeatedField<global::GrpcServer.Rule> rules_ = new pbc::RepeatedField<global::GrpcServer.Rule>();
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public pbc::RepeatedField<global::GrpcServer.Rule> Rules {
              get { return rules_; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override bool Equals(object other) {
              return Equals(other as ResPart);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public bool Equals(ResPart other) {
              if (ReferenceEquals(other, null)) {
                return false;
              }
              if (ReferenceEquals(other, this)) {
                return true;
              }
              if(!rules_.Equals(other.rules_)) return false;
              return Equals(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override int GetHashCode() {
              int hash = 1;
              hash ^= rules_.GetHashCode();
              if (_unknownFields != null) {
                hash ^= _unknownFields.GetHashCode();
              }
              return hash;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override string ToString() {
              return pb::JsonFormatter.ToDiagnosticString(this);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void WriteTo(pb::CodedOutputStream output) {
            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              output.WriteRawMessage(this);
            #else
              rules_.WriteTo(output, _repeated_rules_codec);
              if (_unknownFields != null) {
                _unknownFields.WriteTo(output);
              }
            #endif
            }

            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
              rules_.WriteTo(ref output, _repeated_rules_codec);
              if (_unknownFields != null) {
                _unknownFields.WriteTo(ref output);
              }
            }
            #endif

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public int CalculateSize() {
              int size = 0;
              size += rules_.CalculateSize(_repeated_rules_codec);
              if (_unknownFields != null) {
                size += _unknownFields.CalculateSize();
              }
              return size;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(ResPart other) {
              if (other == null) {
                return;
              }
              rules_.Add(other.rules_);
              _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(pb::CodedInputStream input) {
            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              input.ReadRawMessage(this);
            #else
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                    break;
                  case 10: {
                    rules_.AddEntriesFrom(input, _repeated_rules_codec);
                    break;
                  }
                }
              }
            #endif
            }

            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                    break;
                  case 10: {
                    rules_.AddEntriesFrom(ref input, _repeated_rules_codec);
                    break;
                  }
                }
              }
            }
            #endif

          }

        }
        #endregion

      }

    }
    #endregion

  }

  public sealed partial class Rule : pb::IMessage<Rule>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Rule> _parser = new pb::MessageParser<Rule>(() => new Rule());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Rule> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GrpcServer.LogicReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Rule() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Rule(Rule other) : this() {
      label_ = other.label_;
      when_ = other.when_;
      then_ = other.then_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Rule Clone() {
      return new Rule(this);
    }

    /// <summary>Field number for the "label" field.</summary>
    public const int LabelFieldNumber = 1;
    private string label_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Label {
      get { return label_; }
      set {
        label_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "when" field.</summary>
    public const int WhenFieldNumber = 2;
    private string when_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string When {
      get { return when_; }
      set {
        when_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "then" field.</summary>
    public const int ThenFieldNumber = 3;
    private string then_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Then {
      get { return then_; }
      set {
        then_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Rule);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Rule other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Label != other.Label) return false;
      if (When != other.When) return false;
      if (Then != other.Then) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Label.Length != 0) hash ^= Label.GetHashCode();
      if (When.Length != 0) hash ^= When.GetHashCode();
      if (Then.Length != 0) hash ^= Then.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Label.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Label);
      }
      if (When.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(When);
      }
      if (Then.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Then);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Label.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Label);
      }
      if (When.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(When);
      }
      if (Then.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Then);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Label.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Label);
      }
      if (When.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(When);
      }
      if (Then.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Then);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Rule other) {
      if (other == null) {
        return;
      }
      if (other.Label.Length != 0) {
        Label = other.Label;
      }
      if (other.When.Length != 0) {
        When = other.When;
      }
      if (other.Then.Length != 0) {
        Then = other.Then;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Label = input.ReadString();
            break;
          }
          case 18: {
            When = input.ReadString();
            break;
          }
          case 26: {
            Then = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Label = input.ReadString();
            break;
          }
          case 18: {
            When = input.ReadString();
            break;
          }
          case 26: {
            Then = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the Rule message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public sealed partial class Req : pb::IMessage<Req>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<Req> _parser = new pb::MessageParser<Req>(() => new Req());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<Req> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::GrpcServer.Rule.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Req() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Req(Req other) : this() {
          label_ = other.label_;
          switch (other.ReqCase) {
            case ReqOneofCase.RuleDeleteReq:
              RuleDeleteReq = other.RuleDeleteReq.Clone();
              break;
            case ReqOneofCase.RuleSetLabelReq:
              RuleSetLabelReq = other.RuleSetLabelReq.Clone();
              break;
          }

          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Req Clone() {
          return new Req(this);
        }

        /// <summary>Field number for the "label" field.</summary>
        public const int LabelFieldNumber = 1;
        private string label_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Label {
          get { return label_; }
          set {
            label_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "rule_delete_req" field.</summary>
        public const int RuleDeleteReqFieldNumber = 100;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::GrpcServer.Rule.Types.Delete.Types.Req RuleDeleteReq {
          get { return reqCase_ == ReqOneofCase.RuleDeleteReq ? (global::GrpcServer.Rule.Types.Delete.Types.Req) req_ : null; }
          set {
            req_ = value;
            reqCase_ = value == null ? ReqOneofCase.None : ReqOneofCase.RuleDeleteReq;
          }
        }

        /// <summary>Field number for the "rule_set_label_req" field.</summary>
        public const int RuleSetLabelReqFieldNumber = 101;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::GrpcServer.Rule.Types.SetLabel.Types.Req RuleSetLabelReq {
          get { return reqCase_ == ReqOneofCase.RuleSetLabelReq ? (global::GrpcServer.Rule.Types.SetLabel.Types.Req) req_ : null; }
          set {
            req_ = value;
            reqCase_ = value == null ? ReqOneofCase.None : ReqOneofCase.RuleSetLabelReq;
          }
        }

        private object req_;
        /// <summary>Enum of possible cases for the "req" oneof.</summary>
        public enum ReqOneofCase {
          None = 0,
          RuleDeleteReq = 100,
          RuleSetLabelReq = 101,
        }
        private ReqOneofCase reqCase_ = ReqOneofCase.None;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ReqOneofCase ReqCase {
          get { return reqCase_; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void ClearReq() {
          reqCase_ = ReqOneofCase.None;
          req_ = null;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as Req);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(Req other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (Label != other.Label) return false;
          if (!object.Equals(RuleDeleteReq, other.RuleDeleteReq)) return false;
          if (!object.Equals(RuleSetLabelReq, other.RuleSetLabelReq)) return false;
          if (ReqCase != other.ReqCase) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (Label.Length != 0) hash ^= Label.GetHashCode();
          if (reqCase_ == ReqOneofCase.RuleDeleteReq) hash ^= RuleDeleteReq.GetHashCode();
          if (reqCase_ == ReqOneofCase.RuleSetLabelReq) hash ^= RuleSetLabelReq.GetHashCode();
          hash ^= (int) reqCase_;
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (Label.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(Label);
          }
          if (reqCase_ == ReqOneofCase.RuleDeleteReq) {
            output.WriteRawTag(162, 6);
            output.WriteMessage(RuleDeleteReq);
          }
          if (reqCase_ == ReqOneofCase.RuleSetLabelReq) {
            output.WriteRawTag(170, 6);
            output.WriteMessage(RuleSetLabelReq);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (Label.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(Label);
          }
          if (reqCase_ == ReqOneofCase.RuleDeleteReq) {
            output.WriteRawTag(162, 6);
            output.WriteMessage(RuleDeleteReq);
          }
          if (reqCase_ == ReqOneofCase.RuleSetLabelReq) {
            output.WriteRawTag(170, 6);
            output.WriteMessage(RuleSetLabelReq);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (Label.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Label);
          }
          if (reqCase_ == ReqOneofCase.RuleDeleteReq) {
            size += 2 + pb::CodedOutputStream.ComputeMessageSize(RuleDeleteReq);
          }
          if (reqCase_ == ReqOneofCase.RuleSetLabelReq) {
            size += 2 + pb::CodedOutputStream.ComputeMessageSize(RuleSetLabelReq);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(Req other) {
          if (other == null) {
            return;
          }
          if (other.Label.Length != 0) {
            Label = other.Label;
          }
          switch (other.ReqCase) {
            case ReqOneofCase.RuleDeleteReq:
              if (RuleDeleteReq == null) {
                RuleDeleteReq = new global::GrpcServer.Rule.Types.Delete.Types.Req();
              }
              RuleDeleteReq.MergeFrom(other.RuleDeleteReq);
              break;
            case ReqOneofCase.RuleSetLabelReq:
              if (RuleSetLabelReq == null) {
                RuleSetLabelReq = new global::GrpcServer.Rule.Types.SetLabel.Types.Req();
              }
              RuleSetLabelReq.MergeFrom(other.RuleSetLabelReq);
              break;
          }

          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                Label = input.ReadString();
                break;
              }
              case 802: {
                global::GrpcServer.Rule.Types.Delete.Types.Req subBuilder = new global::GrpcServer.Rule.Types.Delete.Types.Req();
                if (reqCase_ == ReqOneofCase.RuleDeleteReq) {
                  subBuilder.MergeFrom(RuleDeleteReq);
                }
                input.ReadMessage(subBuilder);
                RuleDeleteReq = subBuilder;
                break;
              }
              case 810: {
                global::GrpcServer.Rule.Types.SetLabel.Types.Req subBuilder = new global::GrpcServer.Rule.Types.SetLabel.Types.Req();
                if (reqCase_ == ReqOneofCase.RuleSetLabelReq) {
                  subBuilder.MergeFrom(RuleSetLabelReq);
                }
                input.ReadMessage(subBuilder);
                RuleSetLabelReq = subBuilder;
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 10: {
                Label = input.ReadString();
                break;
              }
              case 802: {
                global::GrpcServer.Rule.Types.Delete.Types.Req subBuilder = new global::GrpcServer.Rule.Types.Delete.Types.Req();
                if (reqCase_ == ReqOneofCase.RuleDeleteReq) {
                  subBuilder.MergeFrom(RuleDeleteReq);
                }
                input.ReadMessage(subBuilder);
                RuleDeleteReq = subBuilder;
                break;
              }
              case 810: {
                global::GrpcServer.Rule.Types.SetLabel.Types.Req subBuilder = new global::GrpcServer.Rule.Types.SetLabel.Types.Req();
                if (reqCase_ == ReqOneofCase.RuleSetLabelReq) {
                  subBuilder.MergeFrom(RuleSetLabelReq);
                }
                input.ReadMessage(subBuilder);
                RuleSetLabelReq = subBuilder;
                break;
              }
            }
          }
        }
        #endif

      }

      public sealed partial class Res : pb::IMessage<Res>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<Res> _parser = new pb::MessageParser<Res>(() => new Res());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<Res> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::GrpcServer.Rule.Descriptor.NestedTypes[1]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Res() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Res(Res other) : this() {
          switch (other.ResCase) {
            case ResOneofCase.RuleDeleteRes:
              RuleDeleteRes = other.RuleDeleteRes.Clone();
              break;
            case ResOneofCase.RuleSetLabelRes:
              RuleSetLabelRes = other.RuleSetLabelRes.Clone();
              break;
          }

          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Res Clone() {
          return new Res(this);
        }

        /// <summary>Field number for the "rule_delete_res" field.</summary>
        public const int RuleDeleteResFieldNumber = 100;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::GrpcServer.Rule.Types.Delete.Types.Res RuleDeleteRes {
          get { return resCase_ == ResOneofCase.RuleDeleteRes ? (global::GrpcServer.Rule.Types.Delete.Types.Res) res_ : null; }
          set {
            res_ = value;
            resCase_ = value == null ? ResOneofCase.None : ResOneofCase.RuleDeleteRes;
          }
        }

        /// <summary>Field number for the "rule_set_label_res" field.</summary>
        public const int RuleSetLabelResFieldNumber = 101;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::GrpcServer.Rule.Types.SetLabel.Types.Res RuleSetLabelRes {
          get { return resCase_ == ResOneofCase.RuleSetLabelRes ? (global::GrpcServer.Rule.Types.SetLabel.Types.Res) res_ : null; }
          set {
            res_ = value;
            resCase_ = value == null ? ResOneofCase.None : ResOneofCase.RuleSetLabelRes;
          }
        }

        private object res_;
        /// <summary>Enum of possible cases for the "res" oneof.</summary>
        public enum ResOneofCase {
          None = 0,
          RuleDeleteRes = 100,
          RuleSetLabelRes = 101,
        }
        private ResOneofCase resCase_ = ResOneofCase.None;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ResOneofCase ResCase {
          get { return resCase_; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void ClearRes() {
          resCase_ = ResOneofCase.None;
          res_ = null;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as Res);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(Res other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (!object.Equals(RuleDeleteRes, other.RuleDeleteRes)) return false;
          if (!object.Equals(RuleSetLabelRes, other.RuleSetLabelRes)) return false;
          if (ResCase != other.ResCase) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (resCase_ == ResOneofCase.RuleDeleteRes) hash ^= RuleDeleteRes.GetHashCode();
          if (resCase_ == ResOneofCase.RuleSetLabelRes) hash ^= RuleSetLabelRes.GetHashCode();
          hash ^= (int) resCase_;
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (resCase_ == ResOneofCase.RuleDeleteRes) {
            output.WriteRawTag(162, 6);
            output.WriteMessage(RuleDeleteRes);
          }
          if (resCase_ == ResOneofCase.RuleSetLabelRes) {
            output.WriteRawTag(170, 6);
            output.WriteMessage(RuleSetLabelRes);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (resCase_ == ResOneofCase.RuleDeleteRes) {
            output.WriteRawTag(162, 6);
            output.WriteMessage(RuleDeleteRes);
          }
          if (resCase_ == ResOneofCase.RuleSetLabelRes) {
            output.WriteRawTag(170, 6);
            output.WriteMessage(RuleSetLabelRes);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (resCase_ == ResOneofCase.RuleDeleteRes) {
            size += 2 + pb::CodedOutputStream.ComputeMessageSize(RuleDeleteRes);
          }
          if (resCase_ == ResOneofCase.RuleSetLabelRes) {
            size += 2 + pb::CodedOutputStream.ComputeMessageSize(RuleSetLabelRes);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(Res other) {
          if (other == null) {
            return;
          }
          switch (other.ResCase) {
            case ResOneofCase.RuleDeleteRes:
              if (RuleDeleteRes == null) {
                RuleDeleteRes = new global::GrpcServer.Rule.Types.Delete.Types.Res();
              }
              RuleDeleteRes.MergeFrom(other.RuleDeleteRes);
              break;
            case ResOneofCase.RuleSetLabelRes:
              if (RuleSetLabelRes == null) {
                RuleSetLabelRes = new global::GrpcServer.Rule.Types.SetLabel.Types.Res();
              }
              RuleSetLabelRes.MergeFrom(other.RuleSetLabelRes);
              break;
          }

          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 802: {
                global::GrpcServer.Rule.Types.Delete.Types.Res subBuilder = new global::GrpcServer.Rule.Types.Delete.Types.Res();
                if (resCase_ == ResOneofCase.RuleDeleteRes) {
                  subBuilder.MergeFrom(RuleDeleteRes);
                }
                input.ReadMessage(subBuilder);
                RuleDeleteRes = subBuilder;
                break;
              }
              case 810: {
                global::GrpcServer.Rule.Types.SetLabel.Types.Res subBuilder = new global::GrpcServer.Rule.Types.SetLabel.Types.Res();
                if (resCase_ == ResOneofCase.RuleSetLabelRes) {
                  subBuilder.MergeFrom(RuleSetLabelRes);
                }
                input.ReadMessage(subBuilder);
                RuleSetLabelRes = subBuilder;
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 802: {
                global::GrpcServer.Rule.Types.Delete.Types.Res subBuilder = new global::GrpcServer.Rule.Types.Delete.Types.Res();
                if (resCase_ == ResOneofCase.RuleDeleteRes) {
                  subBuilder.MergeFrom(RuleDeleteRes);
                }
                input.ReadMessage(subBuilder);
                RuleDeleteRes = subBuilder;
                break;
              }
              case 810: {
                global::GrpcServer.Rule.Types.SetLabel.Types.Res subBuilder = new global::GrpcServer.Rule.Types.SetLabel.Types.Res();
                if (resCase_ == ResOneofCase.RuleSetLabelRes) {
                  subBuilder.MergeFrom(RuleSetLabelRes);
                }
                input.ReadMessage(subBuilder);
                RuleSetLabelRes = subBuilder;
                break;
              }
            }
          }
        }
        #endif

      }

      public sealed partial class Delete : pb::IMessage<Delete>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<Delete> _parser = new pb::MessageParser<Delete>(() => new Delete());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<Delete> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::GrpcServer.Rule.Descriptor.NestedTypes[2]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Delete() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Delete(Delete other) : this() {
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Delete Clone() {
          return new Delete(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as Delete);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(Delete other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(Delete other) {
          if (other == null) {
            return;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
            }
          }
        }
        #endif

        #region Nested types
        /// <summary>Container for nested types declared in the Delete message type.</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static partial class Types {
          public sealed partial class Req : pb::IMessage<Req>
          #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              , pb::IBufferMessage
          #endif
          {
            private static readonly pb::MessageParser<Req> _parser = new pb::MessageParser<Req>(() => new Req());
            private pb::UnknownFieldSet _unknownFields;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pb::MessageParser<Req> Parser { get { return _parser; } }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pbr::MessageDescriptor Descriptor {
              get { return global::GrpcServer.Rule.Types.Delete.Descriptor.NestedTypes[0]; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            pbr::MessageDescriptor pb::IMessage.Descriptor {
              get { return Descriptor; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public Req() {
              OnConstruction();
            }

            partial void OnConstruction();

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public Req(Req other) : this() {
              _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public Req Clone() {
              return new Req(this);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override bool Equals(object other) {
              return Equals(other as Req);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public bool Equals(Req other) {
              if (ReferenceEquals(other, null)) {
                return false;
              }
              if (ReferenceEquals(other, this)) {
                return true;
              }
              return Equals(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override int GetHashCode() {
              int hash = 1;
              if (_unknownFields != null) {
                hash ^= _unknownFields.GetHashCode();
              }
              return hash;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override string ToString() {
              return pb::JsonFormatter.ToDiagnosticString(this);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void WriteTo(pb::CodedOutputStream output) {
            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              output.WriteRawMessage(this);
            #else
              if (_unknownFields != null) {
                _unknownFields.WriteTo(output);
              }
            #endif
            }

            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
              if (_unknownFields != null) {
                _unknownFields.WriteTo(ref output);
              }
            }
            #endif

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public int CalculateSize() {
              int size = 0;
              if (_unknownFields != null) {
                size += _unknownFields.CalculateSize();
              }
              return size;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(Req other) {
              if (other == null) {
                return;
              }
              _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(pb::CodedInputStream input) {
            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              input.ReadRawMessage(this);
            #else
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                    break;
                }
              }
            #endif
            }

            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                    break;
                }
              }
            }
            #endif

          }

          public sealed partial class Res : pb::IMessage<Res>
          #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              , pb::IBufferMessage
          #endif
          {
            private static readonly pb::MessageParser<Res> _parser = new pb::MessageParser<Res>(() => new Res());
            private pb::UnknownFieldSet _unknownFields;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pb::MessageParser<Res> Parser { get { return _parser; } }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pbr::MessageDescriptor Descriptor {
              get { return global::GrpcServer.Rule.Types.Delete.Descriptor.NestedTypes[1]; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            pbr::MessageDescriptor pb::IMessage.Descriptor {
              get { return Descriptor; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public Res() {
              OnConstruction();
            }

            partial void OnConstruction();

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public Res(Res other) : this() {
              _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public Res Clone() {
              return new Res(this);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override bool Equals(object other) {
              return Equals(other as Res);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public bool Equals(Res other) {
              if (ReferenceEquals(other, null)) {
                return false;
              }
              if (ReferenceEquals(other, this)) {
                return true;
              }
              return Equals(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override int GetHashCode() {
              int hash = 1;
              if (_unknownFields != null) {
                hash ^= _unknownFields.GetHashCode();
              }
              return hash;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override string ToString() {
              return pb::JsonFormatter.ToDiagnosticString(this);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void WriteTo(pb::CodedOutputStream output) {
            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              output.WriteRawMessage(this);
            #else
              if (_unknownFields != null) {
                _unknownFields.WriteTo(output);
              }
            #endif
            }

            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
              if (_unknownFields != null) {
                _unknownFields.WriteTo(ref output);
              }
            }
            #endif

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public int CalculateSize() {
              int size = 0;
              if (_unknownFields != null) {
                size += _unknownFields.CalculateSize();
              }
              return size;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(Res other) {
              if (other == null) {
                return;
              }
              _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(pb::CodedInputStream input) {
            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              input.ReadRawMessage(this);
            #else
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                    break;
                }
              }
            #endif
            }

            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                    break;
                }
              }
            }
            #endif

          }

        }
        #endregion

      }

      public sealed partial class SetLabel : pb::IMessage<SetLabel>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<SetLabel> _parser = new pb::MessageParser<SetLabel>(() => new SetLabel());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<SetLabel> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::GrpcServer.Rule.Descriptor.NestedTypes[3]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public SetLabel() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public SetLabel(SetLabel other) : this() {
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public SetLabel Clone() {
          return new SetLabel(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as SetLabel);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(SetLabel other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(SetLabel other) {
          if (other == null) {
            return;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
            }
          }
        }
        #endif

        #region Nested types
        /// <summary>Container for nested types declared in the SetLabel message type.</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static partial class Types {
          public sealed partial class Req : pb::IMessage<Req>
          #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              , pb::IBufferMessage
          #endif
          {
            private static readonly pb::MessageParser<Req> _parser = new pb::MessageParser<Req>(() => new Req());
            private pb::UnknownFieldSet _unknownFields;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pb::MessageParser<Req> Parser { get { return _parser; } }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pbr::MessageDescriptor Descriptor {
              get { return global::GrpcServer.Rule.Types.SetLabel.Descriptor.NestedTypes[0]; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            pbr::MessageDescriptor pb::IMessage.Descriptor {
              get { return Descriptor; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public Req() {
              OnConstruction();
            }

            partial void OnConstruction();

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public Req(Req other) : this() {
              label_ = other.label_;
              _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public Req Clone() {
              return new Req(this);
            }

            /// <summary>Field number for the "label" field.</summary>
            public const int LabelFieldNumber = 1;
            private string label_ = "";
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public string Label {
              get { return label_; }
              set {
                label_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
              }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override bool Equals(object other) {
              return Equals(other as Req);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public bool Equals(Req other) {
              if (ReferenceEquals(other, null)) {
                return false;
              }
              if (ReferenceEquals(other, this)) {
                return true;
              }
              if (Label != other.Label) return false;
              return Equals(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override int GetHashCode() {
              int hash = 1;
              if (Label.Length != 0) hash ^= Label.GetHashCode();
              if (_unknownFields != null) {
                hash ^= _unknownFields.GetHashCode();
              }
              return hash;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override string ToString() {
              return pb::JsonFormatter.ToDiagnosticString(this);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void WriteTo(pb::CodedOutputStream output) {
            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              output.WriteRawMessage(this);
            #else
              if (Label.Length != 0) {
                output.WriteRawTag(10);
                output.WriteString(Label);
              }
              if (_unknownFields != null) {
                _unknownFields.WriteTo(output);
              }
            #endif
            }

            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
              if (Label.Length != 0) {
                output.WriteRawTag(10);
                output.WriteString(Label);
              }
              if (_unknownFields != null) {
                _unknownFields.WriteTo(ref output);
              }
            }
            #endif

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public int CalculateSize() {
              int size = 0;
              if (Label.Length != 0) {
                size += 1 + pb::CodedOutputStream.ComputeStringSize(Label);
              }
              if (_unknownFields != null) {
                size += _unknownFields.CalculateSize();
              }
              return size;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(Req other) {
              if (other == null) {
                return;
              }
              if (other.Label.Length != 0) {
                Label = other.Label;
              }
              _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(pb::CodedInputStream input) {
            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              input.ReadRawMessage(this);
            #else
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                    break;
                  case 10: {
                    Label = input.ReadString();
                    break;
                  }
                }
              }
            #endif
            }

            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                    break;
                  case 10: {
                    Label = input.ReadString();
                    break;
                  }
                }
              }
            }
            #endif

          }

          public sealed partial class Res : pb::IMessage<Res>
          #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              , pb::IBufferMessage
          #endif
          {
            private static readonly pb::MessageParser<Res> _parser = new pb::MessageParser<Res>(() => new Res());
            private pb::UnknownFieldSet _unknownFields;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pb::MessageParser<Res> Parser { get { return _parser; } }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pbr::MessageDescriptor Descriptor {
              get { return global::GrpcServer.Rule.Types.SetLabel.Descriptor.NestedTypes[1]; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            pbr::MessageDescriptor pb::IMessage.Descriptor {
              get { return Descriptor; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public Res() {
              OnConstruction();
            }

            partial void OnConstruction();

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public Res(Res other) : this() {
              _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public Res Clone() {
              return new Res(this);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override bool Equals(object other) {
              return Equals(other as Res);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public bool Equals(Res other) {
              if (ReferenceEquals(other, null)) {
                return false;
              }
              if (ReferenceEquals(other, this)) {
                return true;
              }
              return Equals(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override int GetHashCode() {
              int hash = 1;
              if (_unknownFields != null) {
                hash ^= _unknownFields.GetHashCode();
              }
              return hash;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override string ToString() {
              return pb::JsonFormatter.ToDiagnosticString(this);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void WriteTo(pb::CodedOutputStream output) {
            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              output.WriteRawMessage(this);
            #else
              if (_unknownFields != null) {
                _unknownFields.WriteTo(output);
              }
            #endif
            }

            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
              if (_unknownFields != null) {
                _unknownFields.WriteTo(ref output);
              }
            }
            #endif

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public int CalculateSize() {
              int size = 0;
              if (_unknownFields != null) {
                size += _unknownFields.CalculateSize();
              }
              return size;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(Res other) {
              if (other == null) {
                return;
              }
              _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(pb::CodedInputStream input) {
            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              input.ReadRawMessage(this);
            #else
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                    break;
                }
              }
            #endif
            }

            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                    break;
                }
              }
            }
            #endif

          }

        }
        #endregion

      }

    }
    #endregion

  }

  public sealed partial class Explanation : pb::IMessage<Explanation>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Explanation> _parser = new pb::MessageParser<Explanation>(() => new Explanation());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Explanation> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GrpcServer.LogicReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Explanation() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Explanation(Explanation other) : this() {
      rule_ = other.rule_ != null ? other.rule_.Clone() : null;
      varMapping_ = other.varMapping_.Clone();
      condition_ = other.condition_ != null ? other.condition_.Clone() : null;
      conclusion_ = other.conclusion_ != null ? other.conclusion_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Explanation Clone() {
      return new Explanation(this);
    }

    /// <summary>Field number for the "rule" field.</summary>
    public const int RuleFieldNumber = 1;
    private global::GrpcServer.Rule rule_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GrpcServer.Rule Rule {
      get { return rule_; }
      set {
        rule_ = value;
      }
    }

    /// <summary>Field number for the "var_mapping" field.</summary>
    public const int VarMappingFieldNumber = 2;
    private static readonly pbc::MapField<string, global::GrpcServer.Explanation.Types.VarList>.Codec _map_varMapping_codec
        = new pbc::MapField<string, global::GrpcServer.Explanation.Types.VarList>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForMessage(18, global::GrpcServer.Explanation.Types.VarList.Parser), 18);
    private readonly pbc::MapField<string, global::GrpcServer.Explanation.Types.VarList> varMapping_ = new pbc::MapField<string, global::GrpcServer.Explanation.Types.VarList>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, global::GrpcServer.Explanation.Types.VarList> VarMapping {
      get { return varMapping_; }
    }

    /// <summary>Field number for the "condition" field.</summary>
    public const int ConditionFieldNumber = 3;
    private global::GrpcServer.ConceptMap condition_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GrpcServer.ConceptMap Condition {
      get { return condition_; }
      set {
        condition_ = value;
      }
    }

    /// <summary>Field number for the "conclusion" field.</summary>
    public const int ConclusionFieldNumber = 4;
    private global::GrpcServer.ConceptMap conclusion_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GrpcServer.ConceptMap Conclusion {
      get { return conclusion_; }
      set {
        conclusion_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Explanation);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Explanation other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Rule, other.Rule)) return false;
      if (!VarMapping.Equals(other.VarMapping)) return false;
      if (!object.Equals(Condition, other.Condition)) return false;
      if (!object.Equals(Conclusion, other.Conclusion)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (rule_ != null) hash ^= Rule.GetHashCode();
      hash ^= VarMapping.GetHashCode();
      if (condition_ != null) hash ^= Condition.GetHashCode();
      if (conclusion_ != null) hash ^= Conclusion.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (rule_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Rule);
      }
      varMapping_.WriteTo(output, _map_varMapping_codec);
      if (condition_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Condition);
      }
      if (conclusion_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(Conclusion);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (rule_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Rule);
      }
      varMapping_.WriteTo(ref output, _map_varMapping_codec);
      if (condition_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Condition);
      }
      if (conclusion_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(Conclusion);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (rule_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Rule);
      }
      size += varMapping_.CalculateSize(_map_varMapping_codec);
      if (condition_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Condition);
      }
      if (conclusion_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Conclusion);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Explanation other) {
      if (other == null) {
        return;
      }
      if (other.rule_ != null) {
        if (rule_ == null) {
          Rule = new global::GrpcServer.Rule();
        }
        Rule.MergeFrom(other.Rule);
      }
      varMapping_.Add(other.varMapping_);
      if (other.condition_ != null) {
        if (condition_ == null) {
          Condition = new global::GrpcServer.ConceptMap();
        }
        Condition.MergeFrom(other.Condition);
      }
      if (other.conclusion_ != null) {
        if (conclusion_ == null) {
          Conclusion = new global::GrpcServer.ConceptMap();
        }
        Conclusion.MergeFrom(other.Conclusion);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (rule_ == null) {
              Rule = new global::GrpcServer.Rule();
            }
            input.ReadMessage(Rule);
            break;
          }
          case 18: {
            varMapping_.AddEntriesFrom(input, _map_varMapping_codec);
            break;
          }
          case 26: {
            if (condition_ == null) {
              Condition = new global::GrpcServer.ConceptMap();
            }
            input.ReadMessage(Condition);
            break;
          }
          case 34: {
            if (conclusion_ == null) {
              Conclusion = new global::GrpcServer.ConceptMap();
            }
            input.ReadMessage(Conclusion);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (rule_ == null) {
              Rule = new global::GrpcServer.Rule();
            }
            input.ReadMessage(Rule);
            break;
          }
          case 18: {
            varMapping_.AddEntriesFrom(ref input, _map_varMapping_codec);
            break;
          }
          case 26: {
            if (condition_ == null) {
              Condition = new global::GrpcServer.ConceptMap();
            }
            input.ReadMessage(Condition);
            break;
          }
          case 34: {
            if (conclusion_ == null) {
              Conclusion = new global::GrpcServer.ConceptMap();
            }
            input.ReadMessage(Conclusion);
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the Explanation message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public sealed partial class VarList : pb::IMessage<VarList>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<VarList> _parser = new pb::MessageParser<VarList>(() => new VarList());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<VarList> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::GrpcServer.Explanation.Descriptor.NestedTypes[1]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public VarList() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public VarList(VarList other) : this() {
          vars_ = other.vars_.Clone();
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public VarList Clone() {
          return new VarList(this);
        }

        /// <summary>Field number for the "vars" field.</summary>
        public const int VarsFieldNumber = 1;
        private static readonly pb::FieldCodec<string> _repeated_vars_codec
            = pb::FieldCodec.ForString(10);
        private readonly pbc::RepeatedField<string> vars_ = new pbc::RepeatedField<string>();
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pbc::RepeatedField<string> Vars {
          get { return vars_; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as VarList);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(VarList other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if(!vars_.Equals(other.vars_)) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          hash ^= vars_.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          vars_.WriteTo(output, _repeated_vars_codec);
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          vars_.WriteTo(ref output, _repeated_vars_codec);
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          size += vars_.CalculateSize(_repeated_vars_codec);
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(VarList other) {
          if (other == null) {
            return;
          }
          vars_.Add(other.vars_);
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                vars_.AddEntriesFrom(input, _repeated_vars_codec);
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 10: {
                vars_.AddEntriesFrom(ref input, _repeated_vars_codec);
                break;
              }
            }
          }
        }
        #endif

      }

    }
    #endregion

  }

  #endregion

}

#endregion Designer generated code
