// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: common/transaction.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace GrpcServer {

  /// <summary>Holder for reflection information generated from common/transaction.proto</summary>
  public static partial class TransactionReflection {

    #region Descriptor
    /// <summary>File descriptor for common/transaction.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static TransactionReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Chhjb21tb24vdHJhbnNhY3Rpb24ucHJvdG8SD3R5cGVkYi5wcm90b2NvbBoU",
            "Y29tbW9uL2NvbmNlcHQucHJvdG8aEmNvbW1vbi9sb2dpYy5wcm90bxoUY29t",
            "bW9uL29wdGlvbnMucHJvdG8aEmNvbW1vbi9xdWVyeS5wcm90byKzEQoLVHJh",
            "bnNhY3Rpb24aOAoGQ2xpZW50Ei4KBHJlcXMYASADKAsyIC50eXBlZGIucHJv",
            "dG9jb2wuVHJhbnNhY3Rpb24uUmVxGn0KBlNlcnZlchIvCgNyZXMYAiABKAsy",
            "IC50eXBlZGIucHJvdG9jb2wuVHJhbnNhY3Rpb24uUmVzSAASOAoIcmVzX3Bh",
            "cnQYAyABKAsyJC50eXBlZGIucHJvdG9jb2wuVHJhbnNhY3Rpb24uUmVzUGFy",
            "dEgAQggKBnNlcnZlchreBQoDUmVxEg4KBnJlcV9pZBgBIAEoDBJACghtZXRh",
            "ZGF0YRgCIAMoCzIuLnR5cGVkYi5wcm90b2NvbC5UcmFuc2FjdGlvbi5SZXEu",
            "TWV0YWRhdGFFbnRyeRI5CghvcGVuX3JlcRgDIAEoCzIlLnR5cGVkYi5wcm90",
            "b2NvbC5UcmFuc2FjdGlvbi5PcGVuLlJlcUgAEj0KCnN0cmVhbV9yZXEYBCAB",
            "KAsyJy50eXBlZGIucHJvdG9jb2wuVHJhbnNhY3Rpb24uU3RyZWFtLlJlcUgA",
            "Ej0KCmNvbW1pdF9yZXEYBSABKAsyJy50eXBlZGIucHJvdG9jb2wuVHJhbnNh",
            "Y3Rpb24uQ29tbWl0LlJlcUgAEkEKDHJvbGxiYWNrX3JlcRgGIAEoCzIpLnR5",
            "cGVkYi5wcm90b2NvbC5UcmFuc2FjdGlvbi5Sb2xsYmFjay5SZXFIABI+ChFx",
            "dWVyeV9tYW5hZ2VyX3JlcRgHIAEoCzIhLnR5cGVkYi5wcm90b2NvbC5RdWVy",
            "eU1hbmFnZXIuUmVxSAASQgoTY29uY2VwdF9tYW5hZ2VyX3JlcRgIIAEoCzIj",
            "LnR5cGVkYi5wcm90b2NvbC5Db25jZXB0TWFuYWdlci5SZXFIABI+ChFsb2dp",
            "Y19tYW5hZ2VyX3JlcRgJIAEoCzIhLnR5cGVkYi5wcm90b2NvbC5Mb2dpY01h",
            "bmFnZXIuUmVxSAASLQoIcnVsZV9yZXEYCiABKAsyGS50eXBlZGIucHJvdG9j",
            "b2wuUnVsZS5SZXFIABItCgh0eXBlX3JlcRgLIAEoCzIZLnR5cGVkYi5wcm90",
            "b2NvbC5UeXBlLlJlcUgAEi8KCXRoaW5nX3JlcRgMIAEoCzIaLnR5cGVkYi5w",
            "cm90b2NvbC5UaGluZy5SZXFIABovCg1NZXRhZGF0YUVudHJ5EgsKA2tleRgB",
            "IAEoCRINCgV2YWx1ZRgCIAEoCToCOAFCBQoDcmVxGqwECgNSZXMSDgoGcmVx",
            "X2lkGAEgASgMEjkKCG9wZW5fcmVzGAIgASgLMiUudHlwZWRiLnByb3RvY29s",
            "LlRyYW5zYWN0aW9uLk9wZW4uUmVzSAASPQoKY29tbWl0X3JlcxgDIAEoCzIn",
            "LnR5cGVkYi5wcm90b2NvbC5UcmFuc2FjdGlvbi5Db21taXQuUmVzSAASQQoM",
            "cm9sbGJhY2tfcmVzGAQgASgLMikudHlwZWRiLnByb3RvY29sLlRyYW5zYWN0",
            "aW9uLlJvbGxiYWNrLlJlc0gAEj4KEXF1ZXJ5X21hbmFnZXJfcmVzGAUgASgL",
            "MiEudHlwZWRiLnByb3RvY29sLlF1ZXJ5TWFuYWdlci5SZXNIABJCChNjb25j",
            "ZXB0X21hbmFnZXJfcmVzGAYgASgLMiMudHlwZWRiLnByb3RvY29sLkNvbmNl",
            "cHRNYW5hZ2VyLlJlc0gAEj4KEWxvZ2ljX21hbmFnZXJfcmVzGAcgASgLMiEu",
            "dHlwZWRiLnByb3RvY29sLkxvZ2ljTWFuYWdlci5SZXNIABItCghydWxlX3Jl",
            "cxgIIAEoCzIZLnR5cGVkYi5wcm90b2NvbC5SdWxlLlJlc0gAEi0KCHR5cGVf",
            "cmVzGAkgASgLMhkudHlwZWRiLnByb3RvY29sLlR5cGUuUmVzSAASLwoJdGhp",
            "bmdfcmVzGAogASgLMhoudHlwZWRiLnByb3RvY29sLlRoaW5nLlJlc0gAQgUK",
            "A3JlcxrsAgoHUmVzUGFydBIOCgZyZXFfaWQYASABKAwSRgoPc3RyZWFtX3Jl",
            "c19wYXJ0GAIgASgLMisudHlwZWRiLnByb3RvY29sLlRyYW5zYWN0aW9uLlN0",
            "cmVhbS5SZXNQYXJ0SAASRwoWcXVlcnlfbWFuYWdlcl9yZXNfcGFydBgDIAEo",
            "CzIlLnR5cGVkYi5wcm90b2NvbC5RdWVyeU1hbmFnZXIuUmVzUGFydEgAEkcK",
            "FmxvZ2ljX21hbmFnZXJfcmVzX3BhcnQYBCABKAsyJS50eXBlZGIucHJvdG9j",
            "b2wuTG9naWNNYW5hZ2VyLlJlc1BhcnRIABI2Cg10eXBlX3Jlc19wYXJ0GAUg",
            "ASgLMh0udHlwZWRiLnByb3RvY29sLlR5cGUuUmVzUGFydEgAEjgKDnRoaW5n",
            "X3Jlc19wYXJ0GAYgASgLMh4udHlwZWRiLnByb3RvY29sLlRoaW5nLlJlc1Bh",
            "cnRIAEIFCgNyZXMapQEKBE9wZW4alQEKA1JlcRISCgpzZXNzaW9uX2lkGAEg",
            "ASgMEi8KBHR5cGUYAiABKA4yIS50eXBlZGIucHJvdG9jb2wuVHJhbnNhY3Rp",
            "b24uVHlwZRIpCgdvcHRpb25zGAMgASgLMhgudHlwZWRiLnByb3RvY29sLk9w",
            "dGlvbnMSHgoWbmV0d29ya19sYXRlbmN5X21pbGxpcxgEIAEoBRoFCgNSZXMa",
            "dQoGU3RyZWFtGgUKA1JlcRpDCgdSZXNQYXJ0EjgKBXN0YXRlGAEgASgOMiku",
            "dHlwZWRiLnByb3RvY29sLlRyYW5zYWN0aW9uLlN0cmVhbS5TdGF0ZSIfCgVT",
            "dGF0ZRIMCghDT05USU5VRRAAEggKBERPTkUQARoWCgZDb21taXQaBQoDUmVx",
            "GgUKA1JlcxoYCghSb2xsYmFjaxoFCgNSZXEaBQoDUmVzIhsKBFR5cGUSCAoE",
            "UkVBRBAAEgkKBVdSSVRFEAFCPAobY29tLnZhdGljbGUudHlwZWRiLnByb3Rv",
            "Y29sQhBUcmFuc2FjdGlvblByb3RvqgIKR3JwY1NlcnZlcmIGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::GrpcServer.ConceptReflection.Descriptor, global::GrpcServer.LogicReflection.Descriptor, global::GrpcServer.OptionsReflection.Descriptor, global::GrpcServer.QueryReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::GrpcServer.Transaction), global::GrpcServer.Transaction.Parser, null, null, new[]{ typeof(global::GrpcServer.Transaction.Types.Type) }, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::GrpcServer.Transaction.Types.Client), global::GrpcServer.Transaction.Types.Client.Parser, new[]{ "Reqs" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GrpcServer.Transaction.Types.Server), global::GrpcServer.Transaction.Types.Server.Parser, new[]{ "Res", "ResPart" }, new[]{ "Server" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GrpcServer.Transaction.Types.Req), global::GrpcServer.Transaction.Types.Req.Parser, new[]{ "ReqId", "Metadata", "OpenReq", "StreamReq", "CommitReq", "RollbackReq", "QueryManagerReq", "ConceptManagerReq", "LogicManagerReq", "RuleReq", "TypeReq", "ThingReq" }, new[]{ "Req" }, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::GrpcServer.Transaction.Types.Res), global::GrpcServer.Transaction.Types.Res.Parser, new[]{ "ReqId", "OpenRes", "CommitRes", "RollbackRes", "QueryManagerRes", "ConceptManagerRes", "LogicManagerRes", "RuleRes", "TypeRes", "ThingRes" }, new[]{ "Res" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GrpcServer.Transaction.Types.ResPart), global::GrpcServer.Transaction.Types.ResPart.Parser, new[]{ "ReqId", "StreamResPart", "QueryManagerResPart", "LogicManagerResPart", "TypeResPart", "ThingResPart" }, new[]{ "Res" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GrpcServer.Transaction.Types.Open), global::GrpcServer.Transaction.Types.Open.Parser, null, null, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::GrpcServer.Transaction.Types.Open.Types.Req), global::GrpcServer.Transaction.Types.Open.Types.Req.Parser, new[]{ "SessionId", "Type", "Options", "NetworkLatencyMillis" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GrpcServer.Transaction.Types.Open.Types.Res), global::GrpcServer.Transaction.Types.Open.Types.Res.Parser, null, null, null, null, null)}),
            new pbr::GeneratedClrTypeInfo(typeof(global::GrpcServer.Transaction.Types.Stream), global::GrpcServer.Transaction.Types.Stream.Parser, null, null, new[]{ typeof(global::GrpcServer.Transaction.Types.Stream.Types.State) }, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::GrpcServer.Transaction.Types.Stream.Types.Req), global::GrpcServer.Transaction.Types.Stream.Types.Req.Parser, null, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GrpcServer.Transaction.Types.Stream.Types.ResPart), global::GrpcServer.Transaction.Types.Stream.Types.ResPart.Parser, new[]{ "State" }, null, null, null, null)}),
            new pbr::GeneratedClrTypeInfo(typeof(global::GrpcServer.Transaction.Types.Commit), global::GrpcServer.Transaction.Types.Commit.Parser, null, null, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::GrpcServer.Transaction.Types.Commit.Types.Req), global::GrpcServer.Transaction.Types.Commit.Types.Req.Parser, null, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GrpcServer.Transaction.Types.Commit.Types.Res), global::GrpcServer.Transaction.Types.Commit.Types.Res.Parser, null, null, null, null, null)}),
            new pbr::GeneratedClrTypeInfo(typeof(global::GrpcServer.Transaction.Types.Rollback), global::GrpcServer.Transaction.Types.Rollback.Parser, null, null, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::GrpcServer.Transaction.Types.Rollback.Types.Req), global::GrpcServer.Transaction.Types.Rollback.Types.Req.Parser, null, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GrpcServer.Transaction.Types.Rollback.Types.Res), global::GrpcServer.Transaction.Types.Rollback.Types.Res.Parser, null, null, null, null, null)})})
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class Transaction : pb::IMessage<Transaction>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Transaction> _parser = new pb::MessageParser<Transaction>(() => new Transaction());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Transaction> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GrpcServer.TransactionReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Transaction() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Transaction(Transaction other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Transaction Clone() {
      return new Transaction(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Transaction);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Transaction other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Transaction other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the Transaction message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum Type {
        [pbr::OriginalName("READ")] Read = 0,
        [pbr::OriginalName("WRITE")] Write = 1,
      }

      public sealed partial class Client : pb::IMessage<Client>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<Client> _parser = new pb::MessageParser<Client>(() => new Client());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<Client> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::GrpcServer.Transaction.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Client() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Client(Client other) : this() {
          reqs_ = other.reqs_.Clone();
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Client Clone() {
          return new Client(this);
        }

        /// <summary>Field number for the "reqs" field.</summary>
        public const int ReqsFieldNumber = 1;
        private static readonly pb::FieldCodec<global::GrpcServer.Transaction.Types.Req> _repeated_reqs_codec
            = pb::FieldCodec.ForMessage(10, global::GrpcServer.Transaction.Types.Req.Parser);
        private readonly pbc::RepeatedField<global::GrpcServer.Transaction.Types.Req> reqs_ = new pbc::RepeatedField<global::GrpcServer.Transaction.Types.Req>();
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pbc::RepeatedField<global::GrpcServer.Transaction.Types.Req> Reqs {
          get { return reqs_; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as Client);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(Client other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if(!reqs_.Equals(other.reqs_)) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          hash ^= reqs_.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          reqs_.WriteTo(output, _repeated_reqs_codec);
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          reqs_.WriteTo(ref output, _repeated_reqs_codec);
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          size += reqs_.CalculateSize(_repeated_reqs_codec);
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(Client other) {
          if (other == null) {
            return;
          }
          reqs_.Add(other.reqs_);
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                reqs_.AddEntriesFrom(input, _repeated_reqs_codec);
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 10: {
                reqs_.AddEntriesFrom(ref input, _repeated_reqs_codec);
                break;
              }
            }
          }
        }
        #endif

      }

      public sealed partial class Server : pb::IMessage<Server>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<Server> _parser = new pb::MessageParser<Server>(() => new Server());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<Server> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::GrpcServer.Transaction.Descriptor.NestedTypes[1]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Server() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Server(Server other) : this() {
          switch (other.ServerCase) {
            case ServerOneofCase.Res:
              Res = other.Res.Clone();
              break;
            case ServerOneofCase.ResPart:
              ResPart = other.ResPart.Clone();
              break;
          }

          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Server Clone() {
          return new Server(this);
        }

        /// <summary>Field number for the "res" field.</summary>
        public const int ResFieldNumber = 2;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::GrpcServer.Transaction.Types.Res Res {
          get { return serverCase_ == ServerOneofCase.Res ? (global::GrpcServer.Transaction.Types.Res) server_ : null; }
          set {
            server_ = value;
            serverCase_ = value == null ? ServerOneofCase.None : ServerOneofCase.Res;
          }
        }

        /// <summary>Field number for the "res_part" field.</summary>
        public const int ResPartFieldNumber = 3;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::GrpcServer.Transaction.Types.ResPart ResPart {
          get { return serverCase_ == ServerOneofCase.ResPart ? (global::GrpcServer.Transaction.Types.ResPart) server_ : null; }
          set {
            server_ = value;
            serverCase_ = value == null ? ServerOneofCase.None : ServerOneofCase.ResPart;
          }
        }

        private object server_;
        /// <summary>Enum of possible cases for the "server" oneof.</summary>
        public enum ServerOneofCase {
          None = 0,
          Res = 2,
          ResPart = 3,
        }
        private ServerOneofCase serverCase_ = ServerOneofCase.None;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ServerOneofCase ServerCase {
          get { return serverCase_; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void ClearServer() {
          serverCase_ = ServerOneofCase.None;
          server_ = null;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as Server);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(Server other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (!object.Equals(Res, other.Res)) return false;
          if (!object.Equals(ResPart, other.ResPart)) return false;
          if (ServerCase != other.ServerCase) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (serverCase_ == ServerOneofCase.Res) hash ^= Res.GetHashCode();
          if (serverCase_ == ServerOneofCase.ResPart) hash ^= ResPart.GetHashCode();
          hash ^= (int) serverCase_;
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (serverCase_ == ServerOneofCase.Res) {
            output.WriteRawTag(18);
            output.WriteMessage(Res);
          }
          if (serverCase_ == ServerOneofCase.ResPart) {
            output.WriteRawTag(26);
            output.WriteMessage(ResPart);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (serverCase_ == ServerOneofCase.Res) {
            output.WriteRawTag(18);
            output.WriteMessage(Res);
          }
          if (serverCase_ == ServerOneofCase.ResPart) {
            output.WriteRawTag(26);
            output.WriteMessage(ResPart);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (serverCase_ == ServerOneofCase.Res) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(Res);
          }
          if (serverCase_ == ServerOneofCase.ResPart) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(ResPart);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(Server other) {
          if (other == null) {
            return;
          }
          switch (other.ServerCase) {
            case ServerOneofCase.Res:
              if (Res == null) {
                Res = new global::GrpcServer.Transaction.Types.Res();
              }
              Res.MergeFrom(other.Res);
              break;
            case ServerOneofCase.ResPart:
              if (ResPart == null) {
                ResPart = new global::GrpcServer.Transaction.Types.ResPart();
              }
              ResPart.MergeFrom(other.ResPart);
              break;
          }

          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 18: {
                global::GrpcServer.Transaction.Types.Res subBuilder = new global::GrpcServer.Transaction.Types.Res();
                if (serverCase_ == ServerOneofCase.Res) {
                  subBuilder.MergeFrom(Res);
                }
                input.ReadMessage(subBuilder);
                Res = subBuilder;
                break;
              }
              case 26: {
                global::GrpcServer.Transaction.Types.ResPart subBuilder = new global::GrpcServer.Transaction.Types.ResPart();
                if (serverCase_ == ServerOneofCase.ResPart) {
                  subBuilder.MergeFrom(ResPart);
                }
                input.ReadMessage(subBuilder);
                ResPart = subBuilder;
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 18: {
                global::GrpcServer.Transaction.Types.Res subBuilder = new global::GrpcServer.Transaction.Types.Res();
                if (serverCase_ == ServerOneofCase.Res) {
                  subBuilder.MergeFrom(Res);
                }
                input.ReadMessage(subBuilder);
                Res = subBuilder;
                break;
              }
              case 26: {
                global::GrpcServer.Transaction.Types.ResPart subBuilder = new global::GrpcServer.Transaction.Types.ResPart();
                if (serverCase_ == ServerOneofCase.ResPart) {
                  subBuilder.MergeFrom(ResPart);
                }
                input.ReadMessage(subBuilder);
                ResPart = subBuilder;
                break;
              }
            }
          }
        }
        #endif

      }

      public sealed partial class Req : pb::IMessage<Req>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<Req> _parser = new pb::MessageParser<Req>(() => new Req());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<Req> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::GrpcServer.Transaction.Descriptor.NestedTypes[2]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Req() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Req(Req other) : this() {
          reqId_ = other.reqId_;
          metadata_ = other.metadata_.Clone();
          switch (other.ReqCase) {
            case ReqOneofCase.OpenReq:
              OpenReq = other.OpenReq.Clone();
              break;
            case ReqOneofCase.StreamReq:
              StreamReq = other.StreamReq.Clone();
              break;
            case ReqOneofCase.CommitReq:
              CommitReq = other.CommitReq.Clone();
              break;
            case ReqOneofCase.RollbackReq:
              RollbackReq = other.RollbackReq.Clone();
              break;
            case ReqOneofCase.QueryManagerReq:
              QueryManagerReq = other.QueryManagerReq.Clone();
              break;
            case ReqOneofCase.ConceptManagerReq:
              ConceptManagerReq = other.ConceptManagerReq.Clone();
              break;
            case ReqOneofCase.LogicManagerReq:
              LogicManagerReq = other.LogicManagerReq.Clone();
              break;
            case ReqOneofCase.RuleReq:
              RuleReq = other.RuleReq.Clone();
              break;
            case ReqOneofCase.TypeReq:
              TypeReq = other.TypeReq.Clone();
              break;
            case ReqOneofCase.ThingReq:
              ThingReq = other.ThingReq.Clone();
              break;
          }

          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Req Clone() {
          return new Req(this);
        }

        /// <summary>Field number for the "req_id" field.</summary>
        public const int ReqIdFieldNumber = 1;
        private pb::ByteString reqId_ = pb::ByteString.Empty;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pb::ByteString ReqId {
          get { return reqId_; }
          set {
            reqId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "metadata" field.</summary>
        public const int MetadataFieldNumber = 2;
        private static readonly pbc::MapField<string, string>.Codec _map_metadata_codec
            = new pbc::MapField<string, string>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForString(18, ""), 18);
        private readonly pbc::MapField<string, string> metadata_ = new pbc::MapField<string, string>();
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pbc::MapField<string, string> Metadata {
          get { return metadata_; }
        }

        /// <summary>Field number for the "open_req" field.</summary>
        public const int OpenReqFieldNumber = 3;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::GrpcServer.Transaction.Types.Open.Types.Req OpenReq {
          get { return reqCase_ == ReqOneofCase.OpenReq ? (global::GrpcServer.Transaction.Types.Open.Types.Req) req_ : null; }
          set {
            req_ = value;
            reqCase_ = value == null ? ReqOneofCase.None : ReqOneofCase.OpenReq;
          }
        }

        /// <summary>Field number for the "stream_req" field.</summary>
        public const int StreamReqFieldNumber = 4;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::GrpcServer.Transaction.Types.Stream.Types.Req StreamReq {
          get { return reqCase_ == ReqOneofCase.StreamReq ? (global::GrpcServer.Transaction.Types.Stream.Types.Req) req_ : null; }
          set {
            req_ = value;
            reqCase_ = value == null ? ReqOneofCase.None : ReqOneofCase.StreamReq;
          }
        }

        /// <summary>Field number for the "commit_req" field.</summary>
        public const int CommitReqFieldNumber = 5;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::GrpcServer.Transaction.Types.Commit.Types.Req CommitReq {
          get { return reqCase_ == ReqOneofCase.CommitReq ? (global::GrpcServer.Transaction.Types.Commit.Types.Req) req_ : null; }
          set {
            req_ = value;
            reqCase_ = value == null ? ReqOneofCase.None : ReqOneofCase.CommitReq;
          }
        }

        /// <summary>Field number for the "rollback_req" field.</summary>
        public const int RollbackReqFieldNumber = 6;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::GrpcServer.Transaction.Types.Rollback.Types.Req RollbackReq {
          get { return reqCase_ == ReqOneofCase.RollbackReq ? (global::GrpcServer.Transaction.Types.Rollback.Types.Req) req_ : null; }
          set {
            req_ = value;
            reqCase_ = value == null ? ReqOneofCase.None : ReqOneofCase.RollbackReq;
          }
        }

        /// <summary>Field number for the "query_manager_req" field.</summary>
        public const int QueryManagerReqFieldNumber = 7;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::GrpcServer.QueryManager.Types.Req QueryManagerReq {
          get { return reqCase_ == ReqOneofCase.QueryManagerReq ? (global::GrpcServer.QueryManager.Types.Req) req_ : null; }
          set {
            req_ = value;
            reqCase_ = value == null ? ReqOneofCase.None : ReqOneofCase.QueryManagerReq;
          }
        }

        /// <summary>Field number for the "concept_manager_req" field.</summary>
        public const int ConceptManagerReqFieldNumber = 8;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::GrpcServer.ConceptManager.Types.Req ConceptManagerReq {
          get { return reqCase_ == ReqOneofCase.ConceptManagerReq ? (global::GrpcServer.ConceptManager.Types.Req) req_ : null; }
          set {
            req_ = value;
            reqCase_ = value == null ? ReqOneofCase.None : ReqOneofCase.ConceptManagerReq;
          }
        }

        /// <summary>Field number for the "logic_manager_req" field.</summary>
        public const int LogicManagerReqFieldNumber = 9;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::GrpcServer.LogicManager.Types.Req LogicManagerReq {
          get { return reqCase_ == ReqOneofCase.LogicManagerReq ? (global::GrpcServer.LogicManager.Types.Req) req_ : null; }
          set {
            req_ = value;
            reqCase_ = value == null ? ReqOneofCase.None : ReqOneofCase.LogicManagerReq;
          }
        }

        /// <summary>Field number for the "rule_req" field.</summary>
        public const int RuleReqFieldNumber = 10;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::GrpcServer.Rule.Types.Req RuleReq {
          get { return reqCase_ == ReqOneofCase.RuleReq ? (global::GrpcServer.Rule.Types.Req) req_ : null; }
          set {
            req_ = value;
            reqCase_ = value == null ? ReqOneofCase.None : ReqOneofCase.RuleReq;
          }
        }

        /// <summary>Field number for the "type_req" field.</summary>
        public const int TypeReqFieldNumber = 11;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::GrpcServer.Type.Types.Req TypeReq {
          get { return reqCase_ == ReqOneofCase.TypeReq ? (global::GrpcServer.Type.Types.Req) req_ : null; }
          set {
            req_ = value;
            reqCase_ = value == null ? ReqOneofCase.None : ReqOneofCase.TypeReq;
          }
        }

        /// <summary>Field number for the "thing_req" field.</summary>
        public const int ThingReqFieldNumber = 12;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::GrpcServer.Thing.Types.Req ThingReq {
          get { return reqCase_ == ReqOneofCase.ThingReq ? (global::GrpcServer.Thing.Types.Req) req_ : null; }
          set {
            req_ = value;
            reqCase_ = value == null ? ReqOneofCase.None : ReqOneofCase.ThingReq;
          }
        }

        private object req_;
        /// <summary>Enum of possible cases for the "req" oneof.</summary>
        public enum ReqOneofCase {
          None = 0,
          OpenReq = 3,
          StreamReq = 4,
          CommitReq = 5,
          RollbackReq = 6,
          QueryManagerReq = 7,
          ConceptManagerReq = 8,
          LogicManagerReq = 9,
          RuleReq = 10,
          TypeReq = 11,
          ThingReq = 12,
        }
        private ReqOneofCase reqCase_ = ReqOneofCase.None;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ReqOneofCase ReqCase {
          get { return reqCase_; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void ClearReq() {
          reqCase_ = ReqOneofCase.None;
          req_ = null;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as Req);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(Req other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (ReqId != other.ReqId) return false;
          if (!Metadata.Equals(other.Metadata)) return false;
          if (!object.Equals(OpenReq, other.OpenReq)) return false;
          if (!object.Equals(StreamReq, other.StreamReq)) return false;
          if (!object.Equals(CommitReq, other.CommitReq)) return false;
          if (!object.Equals(RollbackReq, other.RollbackReq)) return false;
          if (!object.Equals(QueryManagerReq, other.QueryManagerReq)) return false;
          if (!object.Equals(ConceptManagerReq, other.ConceptManagerReq)) return false;
          if (!object.Equals(LogicManagerReq, other.LogicManagerReq)) return false;
          if (!object.Equals(RuleReq, other.RuleReq)) return false;
          if (!object.Equals(TypeReq, other.TypeReq)) return false;
          if (!object.Equals(ThingReq, other.ThingReq)) return false;
          if (ReqCase != other.ReqCase) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (ReqId.Length != 0) hash ^= ReqId.GetHashCode();
          hash ^= Metadata.GetHashCode();
          if (reqCase_ == ReqOneofCase.OpenReq) hash ^= OpenReq.GetHashCode();
          if (reqCase_ == ReqOneofCase.StreamReq) hash ^= StreamReq.GetHashCode();
          if (reqCase_ == ReqOneofCase.CommitReq) hash ^= CommitReq.GetHashCode();
          if (reqCase_ == ReqOneofCase.RollbackReq) hash ^= RollbackReq.GetHashCode();
          if (reqCase_ == ReqOneofCase.QueryManagerReq) hash ^= QueryManagerReq.GetHashCode();
          if (reqCase_ == ReqOneofCase.ConceptManagerReq) hash ^= ConceptManagerReq.GetHashCode();
          if (reqCase_ == ReqOneofCase.LogicManagerReq) hash ^= LogicManagerReq.GetHashCode();
          if (reqCase_ == ReqOneofCase.RuleReq) hash ^= RuleReq.GetHashCode();
          if (reqCase_ == ReqOneofCase.TypeReq) hash ^= TypeReq.GetHashCode();
          if (reqCase_ == ReqOneofCase.ThingReq) hash ^= ThingReq.GetHashCode();
          hash ^= (int) reqCase_;
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (ReqId.Length != 0) {
            output.WriteRawTag(10);
            output.WriteBytes(ReqId);
          }
          metadata_.WriteTo(output, _map_metadata_codec);
          if (reqCase_ == ReqOneofCase.OpenReq) {
            output.WriteRawTag(26);
            output.WriteMessage(OpenReq);
          }
          if (reqCase_ == ReqOneofCase.StreamReq) {
            output.WriteRawTag(34);
            output.WriteMessage(StreamReq);
          }
          if (reqCase_ == ReqOneofCase.CommitReq) {
            output.WriteRawTag(42);
            output.WriteMessage(CommitReq);
          }
          if (reqCase_ == ReqOneofCase.RollbackReq) {
            output.WriteRawTag(50);
            output.WriteMessage(RollbackReq);
          }
          if (reqCase_ == ReqOneofCase.QueryManagerReq) {
            output.WriteRawTag(58);
            output.WriteMessage(QueryManagerReq);
          }
          if (reqCase_ == ReqOneofCase.ConceptManagerReq) {
            output.WriteRawTag(66);
            output.WriteMessage(ConceptManagerReq);
          }
          if (reqCase_ == ReqOneofCase.LogicManagerReq) {
            output.WriteRawTag(74);
            output.WriteMessage(LogicManagerReq);
          }
          if (reqCase_ == ReqOneofCase.RuleReq) {
            output.WriteRawTag(82);
            output.WriteMessage(RuleReq);
          }
          if (reqCase_ == ReqOneofCase.TypeReq) {
            output.WriteRawTag(90);
            output.WriteMessage(TypeReq);
          }
          if (reqCase_ == ReqOneofCase.ThingReq) {
            output.WriteRawTag(98);
            output.WriteMessage(ThingReq);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (ReqId.Length != 0) {
            output.WriteRawTag(10);
            output.WriteBytes(ReqId);
          }
          metadata_.WriteTo(ref output, _map_metadata_codec);
          if (reqCase_ == ReqOneofCase.OpenReq) {
            output.WriteRawTag(26);
            output.WriteMessage(OpenReq);
          }
          if (reqCase_ == ReqOneofCase.StreamReq) {
            output.WriteRawTag(34);
            output.WriteMessage(StreamReq);
          }
          if (reqCase_ == ReqOneofCase.CommitReq) {
            output.WriteRawTag(42);
            output.WriteMessage(CommitReq);
          }
          if (reqCase_ == ReqOneofCase.RollbackReq) {
            output.WriteRawTag(50);
            output.WriteMessage(RollbackReq);
          }
          if (reqCase_ == ReqOneofCase.QueryManagerReq) {
            output.WriteRawTag(58);
            output.WriteMessage(QueryManagerReq);
          }
          if (reqCase_ == ReqOneofCase.ConceptManagerReq) {
            output.WriteRawTag(66);
            output.WriteMessage(ConceptManagerReq);
          }
          if (reqCase_ == ReqOneofCase.LogicManagerReq) {
            output.WriteRawTag(74);
            output.WriteMessage(LogicManagerReq);
          }
          if (reqCase_ == ReqOneofCase.RuleReq) {
            output.WriteRawTag(82);
            output.WriteMessage(RuleReq);
          }
          if (reqCase_ == ReqOneofCase.TypeReq) {
            output.WriteRawTag(90);
            output.WriteMessage(TypeReq);
          }
          if (reqCase_ == ReqOneofCase.ThingReq) {
            output.WriteRawTag(98);
            output.WriteMessage(ThingReq);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (ReqId.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeBytesSize(ReqId);
          }
          size += metadata_.CalculateSize(_map_metadata_codec);
          if (reqCase_ == ReqOneofCase.OpenReq) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(OpenReq);
          }
          if (reqCase_ == ReqOneofCase.StreamReq) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(StreamReq);
          }
          if (reqCase_ == ReqOneofCase.CommitReq) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(CommitReq);
          }
          if (reqCase_ == ReqOneofCase.RollbackReq) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(RollbackReq);
          }
          if (reqCase_ == ReqOneofCase.QueryManagerReq) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(QueryManagerReq);
          }
          if (reqCase_ == ReqOneofCase.ConceptManagerReq) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(ConceptManagerReq);
          }
          if (reqCase_ == ReqOneofCase.LogicManagerReq) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(LogicManagerReq);
          }
          if (reqCase_ == ReqOneofCase.RuleReq) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(RuleReq);
          }
          if (reqCase_ == ReqOneofCase.TypeReq) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(TypeReq);
          }
          if (reqCase_ == ReqOneofCase.ThingReq) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(ThingReq);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(Req other) {
          if (other == null) {
            return;
          }
          if (other.ReqId.Length != 0) {
            ReqId = other.ReqId;
          }
          metadata_.Add(other.metadata_);
          switch (other.ReqCase) {
            case ReqOneofCase.OpenReq:
              if (OpenReq == null) {
                OpenReq = new global::GrpcServer.Transaction.Types.Open.Types.Req();
              }
              OpenReq.MergeFrom(other.OpenReq);
              break;
            case ReqOneofCase.StreamReq:
              if (StreamReq == null) {
                StreamReq = new global::GrpcServer.Transaction.Types.Stream.Types.Req();
              }
              StreamReq.MergeFrom(other.StreamReq);
              break;
            case ReqOneofCase.CommitReq:
              if (CommitReq == null) {
                CommitReq = new global::GrpcServer.Transaction.Types.Commit.Types.Req();
              }
              CommitReq.MergeFrom(other.CommitReq);
              break;
            case ReqOneofCase.RollbackReq:
              if (RollbackReq == null) {
                RollbackReq = new global::GrpcServer.Transaction.Types.Rollback.Types.Req();
              }
              RollbackReq.MergeFrom(other.RollbackReq);
              break;
            case ReqOneofCase.QueryManagerReq:
              if (QueryManagerReq == null) {
                QueryManagerReq = new global::GrpcServer.QueryManager.Types.Req();
              }
              QueryManagerReq.MergeFrom(other.QueryManagerReq);
              break;
            case ReqOneofCase.ConceptManagerReq:
              if (ConceptManagerReq == null) {
                ConceptManagerReq = new global::GrpcServer.ConceptManager.Types.Req();
              }
              ConceptManagerReq.MergeFrom(other.ConceptManagerReq);
              break;
            case ReqOneofCase.LogicManagerReq:
              if (LogicManagerReq == null) {
                LogicManagerReq = new global::GrpcServer.LogicManager.Types.Req();
              }
              LogicManagerReq.MergeFrom(other.LogicManagerReq);
              break;
            case ReqOneofCase.RuleReq:
              if (RuleReq == null) {
                RuleReq = new global::GrpcServer.Rule.Types.Req();
              }
              RuleReq.MergeFrom(other.RuleReq);
              break;
            case ReqOneofCase.TypeReq:
              if (TypeReq == null) {
                TypeReq = new global::GrpcServer.Type.Types.Req();
              }
              TypeReq.MergeFrom(other.TypeReq);
              break;
            case ReqOneofCase.ThingReq:
              if (ThingReq == null) {
                ThingReq = new global::GrpcServer.Thing.Types.Req();
              }
              ThingReq.MergeFrom(other.ThingReq);
              break;
          }

          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                ReqId = input.ReadBytes();
                break;
              }
              case 18: {
                metadata_.AddEntriesFrom(input, _map_metadata_codec);
                break;
              }
              case 26: {
                global::GrpcServer.Transaction.Types.Open.Types.Req subBuilder = new global::GrpcServer.Transaction.Types.Open.Types.Req();
                if (reqCase_ == ReqOneofCase.OpenReq) {
                  subBuilder.MergeFrom(OpenReq);
                }
                input.ReadMessage(subBuilder);
                OpenReq = subBuilder;
                break;
              }
              case 34: {
                global::GrpcServer.Transaction.Types.Stream.Types.Req subBuilder = new global::GrpcServer.Transaction.Types.Stream.Types.Req();
                if (reqCase_ == ReqOneofCase.StreamReq) {
                  subBuilder.MergeFrom(StreamReq);
                }
                input.ReadMessage(subBuilder);
                StreamReq = subBuilder;
                break;
              }
              case 42: {
                global::GrpcServer.Transaction.Types.Commit.Types.Req subBuilder = new global::GrpcServer.Transaction.Types.Commit.Types.Req();
                if (reqCase_ == ReqOneofCase.CommitReq) {
                  subBuilder.MergeFrom(CommitReq);
                }
                input.ReadMessage(subBuilder);
                CommitReq = subBuilder;
                break;
              }
              case 50: {
                global::GrpcServer.Transaction.Types.Rollback.Types.Req subBuilder = new global::GrpcServer.Transaction.Types.Rollback.Types.Req();
                if (reqCase_ == ReqOneofCase.RollbackReq) {
                  subBuilder.MergeFrom(RollbackReq);
                }
                input.ReadMessage(subBuilder);
                RollbackReq = subBuilder;
                break;
              }
              case 58: {
                global::GrpcServer.QueryManager.Types.Req subBuilder = new global::GrpcServer.QueryManager.Types.Req();
                if (reqCase_ == ReqOneofCase.QueryManagerReq) {
                  subBuilder.MergeFrom(QueryManagerReq);
                }
                input.ReadMessage(subBuilder);
                QueryManagerReq = subBuilder;
                break;
              }
              case 66: {
                global::GrpcServer.ConceptManager.Types.Req subBuilder = new global::GrpcServer.ConceptManager.Types.Req();
                if (reqCase_ == ReqOneofCase.ConceptManagerReq) {
                  subBuilder.MergeFrom(ConceptManagerReq);
                }
                input.ReadMessage(subBuilder);
                ConceptManagerReq = subBuilder;
                break;
              }
              case 74: {
                global::GrpcServer.LogicManager.Types.Req subBuilder = new global::GrpcServer.LogicManager.Types.Req();
                if (reqCase_ == ReqOneofCase.LogicManagerReq) {
                  subBuilder.MergeFrom(LogicManagerReq);
                }
                input.ReadMessage(subBuilder);
                LogicManagerReq = subBuilder;
                break;
              }
              case 82: {
                global::GrpcServer.Rule.Types.Req subBuilder = new global::GrpcServer.Rule.Types.Req();
                if (reqCase_ == ReqOneofCase.RuleReq) {
                  subBuilder.MergeFrom(RuleReq);
                }
                input.ReadMessage(subBuilder);
                RuleReq = subBuilder;
                break;
              }
              case 90: {
                global::GrpcServer.Type.Types.Req subBuilder = new global::GrpcServer.Type.Types.Req();
                if (reqCase_ == ReqOneofCase.TypeReq) {
                  subBuilder.MergeFrom(TypeReq);
                }
                input.ReadMessage(subBuilder);
                TypeReq = subBuilder;
                break;
              }
              case 98: {
                global::GrpcServer.Thing.Types.Req subBuilder = new global::GrpcServer.Thing.Types.Req();
                if (reqCase_ == ReqOneofCase.ThingReq) {
                  subBuilder.MergeFrom(ThingReq);
                }
                input.ReadMessage(subBuilder);
                ThingReq = subBuilder;
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 10: {
                ReqId = input.ReadBytes();
                break;
              }
              case 18: {
                metadata_.AddEntriesFrom(ref input, _map_metadata_codec);
                break;
              }
              case 26: {
                global::GrpcServer.Transaction.Types.Open.Types.Req subBuilder = new global::GrpcServer.Transaction.Types.Open.Types.Req();
                if (reqCase_ == ReqOneofCase.OpenReq) {
                  subBuilder.MergeFrom(OpenReq);
                }
                input.ReadMessage(subBuilder);
                OpenReq = subBuilder;
                break;
              }
              case 34: {
                global::GrpcServer.Transaction.Types.Stream.Types.Req subBuilder = new global::GrpcServer.Transaction.Types.Stream.Types.Req();
                if (reqCase_ == ReqOneofCase.StreamReq) {
                  subBuilder.MergeFrom(StreamReq);
                }
                input.ReadMessage(subBuilder);
                StreamReq = subBuilder;
                break;
              }
              case 42: {
                global::GrpcServer.Transaction.Types.Commit.Types.Req subBuilder = new global::GrpcServer.Transaction.Types.Commit.Types.Req();
                if (reqCase_ == ReqOneofCase.CommitReq) {
                  subBuilder.MergeFrom(CommitReq);
                }
                input.ReadMessage(subBuilder);
                CommitReq = subBuilder;
                break;
              }
              case 50: {
                global::GrpcServer.Transaction.Types.Rollback.Types.Req subBuilder = new global::GrpcServer.Transaction.Types.Rollback.Types.Req();
                if (reqCase_ == ReqOneofCase.RollbackReq) {
                  subBuilder.MergeFrom(RollbackReq);
                }
                input.ReadMessage(subBuilder);
                RollbackReq = subBuilder;
                break;
              }
              case 58: {
                global::GrpcServer.QueryManager.Types.Req subBuilder = new global::GrpcServer.QueryManager.Types.Req();
                if (reqCase_ == ReqOneofCase.QueryManagerReq) {
                  subBuilder.MergeFrom(QueryManagerReq);
                }
                input.ReadMessage(subBuilder);
                QueryManagerReq = subBuilder;
                break;
              }
              case 66: {
                global::GrpcServer.ConceptManager.Types.Req subBuilder = new global::GrpcServer.ConceptManager.Types.Req();
                if (reqCase_ == ReqOneofCase.ConceptManagerReq) {
                  subBuilder.MergeFrom(ConceptManagerReq);
                }
                input.ReadMessage(subBuilder);
                ConceptManagerReq = subBuilder;
                break;
              }
              case 74: {
                global::GrpcServer.LogicManager.Types.Req subBuilder = new global::GrpcServer.LogicManager.Types.Req();
                if (reqCase_ == ReqOneofCase.LogicManagerReq) {
                  subBuilder.MergeFrom(LogicManagerReq);
                }
                input.ReadMessage(subBuilder);
                LogicManagerReq = subBuilder;
                break;
              }
              case 82: {
                global::GrpcServer.Rule.Types.Req subBuilder = new global::GrpcServer.Rule.Types.Req();
                if (reqCase_ == ReqOneofCase.RuleReq) {
                  subBuilder.MergeFrom(RuleReq);
                }
                input.ReadMessage(subBuilder);
                RuleReq = subBuilder;
                break;
              }
              case 90: {
                global::GrpcServer.Type.Types.Req subBuilder = new global::GrpcServer.Type.Types.Req();
                if (reqCase_ == ReqOneofCase.TypeReq) {
                  subBuilder.MergeFrom(TypeReq);
                }
                input.ReadMessage(subBuilder);
                TypeReq = subBuilder;
                break;
              }
              case 98: {
                global::GrpcServer.Thing.Types.Req subBuilder = new global::GrpcServer.Thing.Types.Req();
                if (reqCase_ == ReqOneofCase.ThingReq) {
                  subBuilder.MergeFrom(ThingReq);
                }
                input.ReadMessage(subBuilder);
                ThingReq = subBuilder;
                break;
              }
            }
          }
        }
        #endif

      }

      public sealed partial class Res : pb::IMessage<Res>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<Res> _parser = new pb::MessageParser<Res>(() => new Res());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<Res> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::GrpcServer.Transaction.Descriptor.NestedTypes[3]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Res() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Res(Res other) : this() {
          reqId_ = other.reqId_;
          switch (other.ResCase) {
            case ResOneofCase.OpenRes:
              OpenRes = other.OpenRes.Clone();
              break;
            case ResOneofCase.CommitRes:
              CommitRes = other.CommitRes.Clone();
              break;
            case ResOneofCase.RollbackRes:
              RollbackRes = other.RollbackRes.Clone();
              break;
            case ResOneofCase.QueryManagerRes:
              QueryManagerRes = other.QueryManagerRes.Clone();
              break;
            case ResOneofCase.ConceptManagerRes:
              ConceptManagerRes = other.ConceptManagerRes.Clone();
              break;
            case ResOneofCase.LogicManagerRes:
              LogicManagerRes = other.LogicManagerRes.Clone();
              break;
            case ResOneofCase.RuleRes:
              RuleRes = other.RuleRes.Clone();
              break;
            case ResOneofCase.TypeRes:
              TypeRes = other.TypeRes.Clone();
              break;
            case ResOneofCase.ThingRes:
              ThingRes = other.ThingRes.Clone();
              break;
          }

          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Res Clone() {
          return new Res(this);
        }

        /// <summary>Field number for the "req_id" field.</summary>
        public const int ReqIdFieldNumber = 1;
        private pb::ByteString reqId_ = pb::ByteString.Empty;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pb::ByteString ReqId {
          get { return reqId_; }
          set {
            reqId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "open_res" field.</summary>
        public const int OpenResFieldNumber = 2;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::GrpcServer.Transaction.Types.Open.Types.Res OpenRes {
          get { return resCase_ == ResOneofCase.OpenRes ? (global::GrpcServer.Transaction.Types.Open.Types.Res) res_ : null; }
          set {
            res_ = value;
            resCase_ = value == null ? ResOneofCase.None : ResOneofCase.OpenRes;
          }
        }

        /// <summary>Field number for the "commit_res" field.</summary>
        public const int CommitResFieldNumber = 3;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::GrpcServer.Transaction.Types.Commit.Types.Res CommitRes {
          get { return resCase_ == ResOneofCase.CommitRes ? (global::GrpcServer.Transaction.Types.Commit.Types.Res) res_ : null; }
          set {
            res_ = value;
            resCase_ = value == null ? ResOneofCase.None : ResOneofCase.CommitRes;
          }
        }

        /// <summary>Field number for the "rollback_res" field.</summary>
        public const int RollbackResFieldNumber = 4;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::GrpcServer.Transaction.Types.Rollback.Types.Res RollbackRes {
          get { return resCase_ == ResOneofCase.RollbackRes ? (global::GrpcServer.Transaction.Types.Rollback.Types.Res) res_ : null; }
          set {
            res_ = value;
            resCase_ = value == null ? ResOneofCase.None : ResOneofCase.RollbackRes;
          }
        }

        /// <summary>Field number for the "query_manager_res" field.</summary>
        public const int QueryManagerResFieldNumber = 5;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::GrpcServer.QueryManager.Types.Res QueryManagerRes {
          get { return resCase_ == ResOneofCase.QueryManagerRes ? (global::GrpcServer.QueryManager.Types.Res) res_ : null; }
          set {
            res_ = value;
            resCase_ = value == null ? ResOneofCase.None : ResOneofCase.QueryManagerRes;
          }
        }

        /// <summary>Field number for the "concept_manager_res" field.</summary>
        public const int ConceptManagerResFieldNumber = 6;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::GrpcServer.ConceptManager.Types.Res ConceptManagerRes {
          get { return resCase_ == ResOneofCase.ConceptManagerRes ? (global::GrpcServer.ConceptManager.Types.Res) res_ : null; }
          set {
            res_ = value;
            resCase_ = value == null ? ResOneofCase.None : ResOneofCase.ConceptManagerRes;
          }
        }

        /// <summary>Field number for the "logic_manager_res" field.</summary>
        public const int LogicManagerResFieldNumber = 7;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::GrpcServer.LogicManager.Types.Res LogicManagerRes {
          get { return resCase_ == ResOneofCase.LogicManagerRes ? (global::GrpcServer.LogicManager.Types.Res) res_ : null; }
          set {
            res_ = value;
            resCase_ = value == null ? ResOneofCase.None : ResOneofCase.LogicManagerRes;
          }
        }

        /// <summary>Field number for the "rule_res" field.</summary>
        public const int RuleResFieldNumber = 8;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::GrpcServer.Rule.Types.Res RuleRes {
          get { return resCase_ == ResOneofCase.RuleRes ? (global::GrpcServer.Rule.Types.Res) res_ : null; }
          set {
            res_ = value;
            resCase_ = value == null ? ResOneofCase.None : ResOneofCase.RuleRes;
          }
        }

        /// <summary>Field number for the "type_res" field.</summary>
        public const int TypeResFieldNumber = 9;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::GrpcServer.Type.Types.Res TypeRes {
          get { return resCase_ == ResOneofCase.TypeRes ? (global::GrpcServer.Type.Types.Res) res_ : null; }
          set {
            res_ = value;
            resCase_ = value == null ? ResOneofCase.None : ResOneofCase.TypeRes;
          }
        }

        /// <summary>Field number for the "thing_res" field.</summary>
        public const int ThingResFieldNumber = 10;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::GrpcServer.Thing.Types.Res ThingRes {
          get { return resCase_ == ResOneofCase.ThingRes ? (global::GrpcServer.Thing.Types.Res) res_ : null; }
          set {
            res_ = value;
            resCase_ = value == null ? ResOneofCase.None : ResOneofCase.ThingRes;
          }
        }

        private object res_;
        /// <summary>Enum of possible cases for the "res" oneof.</summary>
        public enum ResOneofCase {
          None = 0,
          OpenRes = 2,
          CommitRes = 3,
          RollbackRes = 4,
          QueryManagerRes = 5,
          ConceptManagerRes = 6,
          LogicManagerRes = 7,
          RuleRes = 8,
          TypeRes = 9,
          ThingRes = 10,
        }
        private ResOneofCase resCase_ = ResOneofCase.None;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ResOneofCase ResCase {
          get { return resCase_; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void ClearRes() {
          resCase_ = ResOneofCase.None;
          res_ = null;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as Res);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(Res other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (ReqId != other.ReqId) return false;
          if (!object.Equals(OpenRes, other.OpenRes)) return false;
          if (!object.Equals(CommitRes, other.CommitRes)) return false;
          if (!object.Equals(RollbackRes, other.RollbackRes)) return false;
          if (!object.Equals(QueryManagerRes, other.QueryManagerRes)) return false;
          if (!object.Equals(ConceptManagerRes, other.ConceptManagerRes)) return false;
          if (!object.Equals(LogicManagerRes, other.LogicManagerRes)) return false;
          if (!object.Equals(RuleRes, other.RuleRes)) return false;
          if (!object.Equals(TypeRes, other.TypeRes)) return false;
          if (!object.Equals(ThingRes, other.ThingRes)) return false;
          if (ResCase != other.ResCase) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (ReqId.Length != 0) hash ^= ReqId.GetHashCode();
          if (resCase_ == ResOneofCase.OpenRes) hash ^= OpenRes.GetHashCode();
          if (resCase_ == ResOneofCase.CommitRes) hash ^= CommitRes.GetHashCode();
          if (resCase_ == ResOneofCase.RollbackRes) hash ^= RollbackRes.GetHashCode();
          if (resCase_ == ResOneofCase.QueryManagerRes) hash ^= QueryManagerRes.GetHashCode();
          if (resCase_ == ResOneofCase.ConceptManagerRes) hash ^= ConceptManagerRes.GetHashCode();
          if (resCase_ == ResOneofCase.LogicManagerRes) hash ^= LogicManagerRes.GetHashCode();
          if (resCase_ == ResOneofCase.RuleRes) hash ^= RuleRes.GetHashCode();
          if (resCase_ == ResOneofCase.TypeRes) hash ^= TypeRes.GetHashCode();
          if (resCase_ == ResOneofCase.ThingRes) hash ^= ThingRes.GetHashCode();
          hash ^= (int) resCase_;
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (ReqId.Length != 0) {
            output.WriteRawTag(10);
            output.WriteBytes(ReqId);
          }
          if (resCase_ == ResOneofCase.OpenRes) {
            output.WriteRawTag(18);
            output.WriteMessage(OpenRes);
          }
          if (resCase_ == ResOneofCase.CommitRes) {
            output.WriteRawTag(26);
            output.WriteMessage(CommitRes);
          }
          if (resCase_ == ResOneofCase.RollbackRes) {
            output.WriteRawTag(34);
            output.WriteMessage(RollbackRes);
          }
          if (resCase_ == ResOneofCase.QueryManagerRes) {
            output.WriteRawTag(42);
            output.WriteMessage(QueryManagerRes);
          }
          if (resCase_ == ResOneofCase.ConceptManagerRes) {
            output.WriteRawTag(50);
            output.WriteMessage(ConceptManagerRes);
          }
          if (resCase_ == ResOneofCase.LogicManagerRes) {
            output.WriteRawTag(58);
            output.WriteMessage(LogicManagerRes);
          }
          if (resCase_ == ResOneofCase.RuleRes) {
            output.WriteRawTag(66);
            output.WriteMessage(RuleRes);
          }
          if (resCase_ == ResOneofCase.TypeRes) {
            output.WriteRawTag(74);
            output.WriteMessage(TypeRes);
          }
          if (resCase_ == ResOneofCase.ThingRes) {
            output.WriteRawTag(82);
            output.WriteMessage(ThingRes);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (ReqId.Length != 0) {
            output.WriteRawTag(10);
            output.WriteBytes(ReqId);
          }
          if (resCase_ == ResOneofCase.OpenRes) {
            output.WriteRawTag(18);
            output.WriteMessage(OpenRes);
          }
          if (resCase_ == ResOneofCase.CommitRes) {
            output.WriteRawTag(26);
            output.WriteMessage(CommitRes);
          }
          if (resCase_ == ResOneofCase.RollbackRes) {
            output.WriteRawTag(34);
            output.WriteMessage(RollbackRes);
          }
          if (resCase_ == ResOneofCase.QueryManagerRes) {
            output.WriteRawTag(42);
            output.WriteMessage(QueryManagerRes);
          }
          if (resCase_ == ResOneofCase.ConceptManagerRes) {
            output.WriteRawTag(50);
            output.WriteMessage(ConceptManagerRes);
          }
          if (resCase_ == ResOneofCase.LogicManagerRes) {
            output.WriteRawTag(58);
            output.WriteMessage(LogicManagerRes);
          }
          if (resCase_ == ResOneofCase.RuleRes) {
            output.WriteRawTag(66);
            output.WriteMessage(RuleRes);
          }
          if (resCase_ == ResOneofCase.TypeRes) {
            output.WriteRawTag(74);
            output.WriteMessage(TypeRes);
          }
          if (resCase_ == ResOneofCase.ThingRes) {
            output.WriteRawTag(82);
            output.WriteMessage(ThingRes);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (ReqId.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeBytesSize(ReqId);
          }
          if (resCase_ == ResOneofCase.OpenRes) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(OpenRes);
          }
          if (resCase_ == ResOneofCase.CommitRes) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(CommitRes);
          }
          if (resCase_ == ResOneofCase.RollbackRes) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(RollbackRes);
          }
          if (resCase_ == ResOneofCase.QueryManagerRes) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(QueryManagerRes);
          }
          if (resCase_ == ResOneofCase.ConceptManagerRes) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(ConceptManagerRes);
          }
          if (resCase_ == ResOneofCase.LogicManagerRes) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(LogicManagerRes);
          }
          if (resCase_ == ResOneofCase.RuleRes) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(RuleRes);
          }
          if (resCase_ == ResOneofCase.TypeRes) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(TypeRes);
          }
          if (resCase_ == ResOneofCase.ThingRes) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(ThingRes);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(Res other) {
          if (other == null) {
            return;
          }
          if (other.ReqId.Length != 0) {
            ReqId = other.ReqId;
          }
          switch (other.ResCase) {
            case ResOneofCase.OpenRes:
              if (OpenRes == null) {
                OpenRes = new global::GrpcServer.Transaction.Types.Open.Types.Res();
              }
              OpenRes.MergeFrom(other.OpenRes);
              break;
            case ResOneofCase.CommitRes:
              if (CommitRes == null) {
                CommitRes = new global::GrpcServer.Transaction.Types.Commit.Types.Res();
              }
              CommitRes.MergeFrom(other.CommitRes);
              break;
            case ResOneofCase.RollbackRes:
              if (RollbackRes == null) {
                RollbackRes = new global::GrpcServer.Transaction.Types.Rollback.Types.Res();
              }
              RollbackRes.MergeFrom(other.RollbackRes);
              break;
            case ResOneofCase.QueryManagerRes:
              if (QueryManagerRes == null) {
                QueryManagerRes = new global::GrpcServer.QueryManager.Types.Res();
              }
              QueryManagerRes.MergeFrom(other.QueryManagerRes);
              break;
            case ResOneofCase.ConceptManagerRes:
              if (ConceptManagerRes == null) {
                ConceptManagerRes = new global::GrpcServer.ConceptManager.Types.Res();
              }
              ConceptManagerRes.MergeFrom(other.ConceptManagerRes);
              break;
            case ResOneofCase.LogicManagerRes:
              if (LogicManagerRes == null) {
                LogicManagerRes = new global::GrpcServer.LogicManager.Types.Res();
              }
              LogicManagerRes.MergeFrom(other.LogicManagerRes);
              break;
            case ResOneofCase.RuleRes:
              if (RuleRes == null) {
                RuleRes = new global::GrpcServer.Rule.Types.Res();
              }
              RuleRes.MergeFrom(other.RuleRes);
              break;
            case ResOneofCase.TypeRes:
              if (TypeRes == null) {
                TypeRes = new global::GrpcServer.Type.Types.Res();
              }
              TypeRes.MergeFrom(other.TypeRes);
              break;
            case ResOneofCase.ThingRes:
              if (ThingRes == null) {
                ThingRes = new global::GrpcServer.Thing.Types.Res();
              }
              ThingRes.MergeFrom(other.ThingRes);
              break;
          }

          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                ReqId = input.ReadBytes();
                break;
              }
              case 18: {
                global::GrpcServer.Transaction.Types.Open.Types.Res subBuilder = new global::GrpcServer.Transaction.Types.Open.Types.Res();
                if (resCase_ == ResOneofCase.OpenRes) {
                  subBuilder.MergeFrom(OpenRes);
                }
                input.ReadMessage(subBuilder);
                OpenRes = subBuilder;
                break;
              }
              case 26: {
                global::GrpcServer.Transaction.Types.Commit.Types.Res subBuilder = new global::GrpcServer.Transaction.Types.Commit.Types.Res();
                if (resCase_ == ResOneofCase.CommitRes) {
                  subBuilder.MergeFrom(CommitRes);
                }
                input.ReadMessage(subBuilder);
                CommitRes = subBuilder;
                break;
              }
              case 34: {
                global::GrpcServer.Transaction.Types.Rollback.Types.Res subBuilder = new global::GrpcServer.Transaction.Types.Rollback.Types.Res();
                if (resCase_ == ResOneofCase.RollbackRes) {
                  subBuilder.MergeFrom(RollbackRes);
                }
                input.ReadMessage(subBuilder);
                RollbackRes = subBuilder;
                break;
              }
              case 42: {
                global::GrpcServer.QueryManager.Types.Res subBuilder = new global::GrpcServer.QueryManager.Types.Res();
                if (resCase_ == ResOneofCase.QueryManagerRes) {
                  subBuilder.MergeFrom(QueryManagerRes);
                }
                input.ReadMessage(subBuilder);
                QueryManagerRes = subBuilder;
                break;
              }
              case 50: {
                global::GrpcServer.ConceptManager.Types.Res subBuilder = new global::GrpcServer.ConceptManager.Types.Res();
                if (resCase_ == ResOneofCase.ConceptManagerRes) {
                  subBuilder.MergeFrom(ConceptManagerRes);
                }
                input.ReadMessage(subBuilder);
                ConceptManagerRes = subBuilder;
                break;
              }
              case 58: {
                global::GrpcServer.LogicManager.Types.Res subBuilder = new global::GrpcServer.LogicManager.Types.Res();
                if (resCase_ == ResOneofCase.LogicManagerRes) {
                  subBuilder.MergeFrom(LogicManagerRes);
                }
                input.ReadMessage(subBuilder);
                LogicManagerRes = subBuilder;
                break;
              }
              case 66: {
                global::GrpcServer.Rule.Types.Res subBuilder = new global::GrpcServer.Rule.Types.Res();
                if (resCase_ == ResOneofCase.RuleRes) {
                  subBuilder.MergeFrom(RuleRes);
                }
                input.ReadMessage(subBuilder);
                RuleRes = subBuilder;
                break;
              }
              case 74: {
                global::GrpcServer.Type.Types.Res subBuilder = new global::GrpcServer.Type.Types.Res();
                if (resCase_ == ResOneofCase.TypeRes) {
                  subBuilder.MergeFrom(TypeRes);
                }
                input.ReadMessage(subBuilder);
                TypeRes = subBuilder;
                break;
              }
              case 82: {
                global::GrpcServer.Thing.Types.Res subBuilder = new global::GrpcServer.Thing.Types.Res();
                if (resCase_ == ResOneofCase.ThingRes) {
                  subBuilder.MergeFrom(ThingRes);
                }
                input.ReadMessage(subBuilder);
                ThingRes = subBuilder;
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 10: {
                ReqId = input.ReadBytes();
                break;
              }
              case 18: {
                global::GrpcServer.Transaction.Types.Open.Types.Res subBuilder = new global::GrpcServer.Transaction.Types.Open.Types.Res();
                if (resCase_ == ResOneofCase.OpenRes) {
                  subBuilder.MergeFrom(OpenRes);
                }
                input.ReadMessage(subBuilder);
                OpenRes = subBuilder;
                break;
              }
              case 26: {
                global::GrpcServer.Transaction.Types.Commit.Types.Res subBuilder = new global::GrpcServer.Transaction.Types.Commit.Types.Res();
                if (resCase_ == ResOneofCase.CommitRes) {
                  subBuilder.MergeFrom(CommitRes);
                }
                input.ReadMessage(subBuilder);
                CommitRes = subBuilder;
                break;
              }
              case 34: {
                global::GrpcServer.Transaction.Types.Rollback.Types.Res subBuilder = new global::GrpcServer.Transaction.Types.Rollback.Types.Res();
                if (resCase_ == ResOneofCase.RollbackRes) {
                  subBuilder.MergeFrom(RollbackRes);
                }
                input.ReadMessage(subBuilder);
                RollbackRes = subBuilder;
                break;
              }
              case 42: {
                global::GrpcServer.QueryManager.Types.Res subBuilder = new global::GrpcServer.QueryManager.Types.Res();
                if (resCase_ == ResOneofCase.QueryManagerRes) {
                  subBuilder.MergeFrom(QueryManagerRes);
                }
                input.ReadMessage(subBuilder);
                QueryManagerRes = subBuilder;
                break;
              }
              case 50: {
                global::GrpcServer.ConceptManager.Types.Res subBuilder = new global::GrpcServer.ConceptManager.Types.Res();
                if (resCase_ == ResOneofCase.ConceptManagerRes) {
                  subBuilder.MergeFrom(ConceptManagerRes);
                }
                input.ReadMessage(subBuilder);
                ConceptManagerRes = subBuilder;
                break;
              }
              case 58: {
                global::GrpcServer.LogicManager.Types.Res subBuilder = new global::GrpcServer.LogicManager.Types.Res();
                if (resCase_ == ResOneofCase.LogicManagerRes) {
                  subBuilder.MergeFrom(LogicManagerRes);
                }
                input.ReadMessage(subBuilder);
                LogicManagerRes = subBuilder;
                break;
              }
              case 66: {
                global::GrpcServer.Rule.Types.Res subBuilder = new global::GrpcServer.Rule.Types.Res();
                if (resCase_ == ResOneofCase.RuleRes) {
                  subBuilder.MergeFrom(RuleRes);
                }
                input.ReadMessage(subBuilder);
                RuleRes = subBuilder;
                break;
              }
              case 74: {
                global::GrpcServer.Type.Types.Res subBuilder = new global::GrpcServer.Type.Types.Res();
                if (resCase_ == ResOneofCase.TypeRes) {
                  subBuilder.MergeFrom(TypeRes);
                }
                input.ReadMessage(subBuilder);
                TypeRes = subBuilder;
                break;
              }
              case 82: {
                global::GrpcServer.Thing.Types.Res subBuilder = new global::GrpcServer.Thing.Types.Res();
                if (resCase_ == ResOneofCase.ThingRes) {
                  subBuilder.MergeFrom(ThingRes);
                }
                input.ReadMessage(subBuilder);
                ThingRes = subBuilder;
                break;
              }
            }
          }
        }
        #endif

      }

      public sealed partial class ResPart : pb::IMessage<ResPart>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<ResPart> _parser = new pb::MessageParser<ResPart>(() => new ResPart());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<ResPart> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::GrpcServer.Transaction.Descriptor.NestedTypes[4]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ResPart() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ResPart(ResPart other) : this() {
          reqId_ = other.reqId_;
          switch (other.ResCase) {
            case ResOneofCase.StreamResPart:
              StreamResPart = other.StreamResPart.Clone();
              break;
            case ResOneofCase.QueryManagerResPart:
              QueryManagerResPart = other.QueryManagerResPart.Clone();
              break;
            case ResOneofCase.LogicManagerResPart:
              LogicManagerResPart = other.LogicManagerResPart.Clone();
              break;
            case ResOneofCase.TypeResPart:
              TypeResPart = other.TypeResPart.Clone();
              break;
            case ResOneofCase.ThingResPart:
              ThingResPart = other.ThingResPart.Clone();
              break;
          }

          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ResPart Clone() {
          return new ResPart(this);
        }

        /// <summary>Field number for the "req_id" field.</summary>
        public const int ReqIdFieldNumber = 1;
        private pb::ByteString reqId_ = pb::ByteString.Empty;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pb::ByteString ReqId {
          get { return reqId_; }
          set {
            reqId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "stream_res_part" field.</summary>
        public const int StreamResPartFieldNumber = 2;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::GrpcServer.Transaction.Types.Stream.Types.ResPart StreamResPart {
          get { return resCase_ == ResOneofCase.StreamResPart ? (global::GrpcServer.Transaction.Types.Stream.Types.ResPart) res_ : null; }
          set {
            res_ = value;
            resCase_ = value == null ? ResOneofCase.None : ResOneofCase.StreamResPart;
          }
        }

        /// <summary>Field number for the "query_manager_res_part" field.</summary>
        public const int QueryManagerResPartFieldNumber = 3;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::GrpcServer.QueryManager.Types.ResPart QueryManagerResPart {
          get { return resCase_ == ResOneofCase.QueryManagerResPart ? (global::GrpcServer.QueryManager.Types.ResPart) res_ : null; }
          set {
            res_ = value;
            resCase_ = value == null ? ResOneofCase.None : ResOneofCase.QueryManagerResPart;
          }
        }

        /// <summary>Field number for the "logic_manager_res_part" field.</summary>
        public const int LogicManagerResPartFieldNumber = 4;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::GrpcServer.LogicManager.Types.ResPart LogicManagerResPart {
          get { return resCase_ == ResOneofCase.LogicManagerResPart ? (global::GrpcServer.LogicManager.Types.ResPart) res_ : null; }
          set {
            res_ = value;
            resCase_ = value == null ? ResOneofCase.None : ResOneofCase.LogicManagerResPart;
          }
        }

        /// <summary>Field number for the "type_res_part" field.</summary>
        public const int TypeResPartFieldNumber = 5;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::GrpcServer.Type.Types.ResPart TypeResPart {
          get { return resCase_ == ResOneofCase.TypeResPart ? (global::GrpcServer.Type.Types.ResPart) res_ : null; }
          set {
            res_ = value;
            resCase_ = value == null ? ResOneofCase.None : ResOneofCase.TypeResPart;
          }
        }

        /// <summary>Field number for the "thing_res_part" field.</summary>
        public const int ThingResPartFieldNumber = 6;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::GrpcServer.Thing.Types.ResPart ThingResPart {
          get { return resCase_ == ResOneofCase.ThingResPart ? (global::GrpcServer.Thing.Types.ResPart) res_ : null; }
          set {
            res_ = value;
            resCase_ = value == null ? ResOneofCase.None : ResOneofCase.ThingResPart;
          }
        }

        private object res_;
        /// <summary>Enum of possible cases for the "res" oneof.</summary>
        public enum ResOneofCase {
          None = 0,
          StreamResPart = 2,
          QueryManagerResPart = 3,
          LogicManagerResPart = 4,
          TypeResPart = 5,
          ThingResPart = 6,
        }
        private ResOneofCase resCase_ = ResOneofCase.None;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ResOneofCase ResCase {
          get { return resCase_; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void ClearRes() {
          resCase_ = ResOneofCase.None;
          res_ = null;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as ResPart);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(ResPart other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (ReqId != other.ReqId) return false;
          if (!object.Equals(StreamResPart, other.StreamResPart)) return false;
          if (!object.Equals(QueryManagerResPart, other.QueryManagerResPart)) return false;
          if (!object.Equals(LogicManagerResPart, other.LogicManagerResPart)) return false;
          if (!object.Equals(TypeResPart, other.TypeResPart)) return false;
          if (!object.Equals(ThingResPart, other.ThingResPart)) return false;
          if (ResCase != other.ResCase) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (ReqId.Length != 0) hash ^= ReqId.GetHashCode();
          if (resCase_ == ResOneofCase.StreamResPart) hash ^= StreamResPart.GetHashCode();
          if (resCase_ == ResOneofCase.QueryManagerResPart) hash ^= QueryManagerResPart.GetHashCode();
          if (resCase_ == ResOneofCase.LogicManagerResPart) hash ^= LogicManagerResPart.GetHashCode();
          if (resCase_ == ResOneofCase.TypeResPart) hash ^= TypeResPart.GetHashCode();
          if (resCase_ == ResOneofCase.ThingResPart) hash ^= ThingResPart.GetHashCode();
          hash ^= (int) resCase_;
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (ReqId.Length != 0) {
            output.WriteRawTag(10);
            output.WriteBytes(ReqId);
          }
          if (resCase_ == ResOneofCase.StreamResPart) {
            output.WriteRawTag(18);
            output.WriteMessage(StreamResPart);
          }
          if (resCase_ == ResOneofCase.QueryManagerResPart) {
            output.WriteRawTag(26);
            output.WriteMessage(QueryManagerResPart);
          }
          if (resCase_ == ResOneofCase.LogicManagerResPart) {
            output.WriteRawTag(34);
            output.WriteMessage(LogicManagerResPart);
          }
          if (resCase_ == ResOneofCase.TypeResPart) {
            output.WriteRawTag(42);
            output.WriteMessage(TypeResPart);
          }
          if (resCase_ == ResOneofCase.ThingResPart) {
            output.WriteRawTag(50);
            output.WriteMessage(ThingResPart);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (ReqId.Length != 0) {
            output.WriteRawTag(10);
            output.WriteBytes(ReqId);
          }
          if (resCase_ == ResOneofCase.StreamResPart) {
            output.WriteRawTag(18);
            output.WriteMessage(StreamResPart);
          }
          if (resCase_ == ResOneofCase.QueryManagerResPart) {
            output.WriteRawTag(26);
            output.WriteMessage(QueryManagerResPart);
          }
          if (resCase_ == ResOneofCase.LogicManagerResPart) {
            output.WriteRawTag(34);
            output.WriteMessage(LogicManagerResPart);
          }
          if (resCase_ == ResOneofCase.TypeResPart) {
            output.WriteRawTag(42);
            output.WriteMessage(TypeResPart);
          }
          if (resCase_ == ResOneofCase.ThingResPart) {
            output.WriteRawTag(50);
            output.WriteMessage(ThingResPart);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (ReqId.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeBytesSize(ReqId);
          }
          if (resCase_ == ResOneofCase.StreamResPart) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(StreamResPart);
          }
          if (resCase_ == ResOneofCase.QueryManagerResPart) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(QueryManagerResPart);
          }
          if (resCase_ == ResOneofCase.LogicManagerResPart) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(LogicManagerResPart);
          }
          if (resCase_ == ResOneofCase.TypeResPart) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(TypeResPart);
          }
          if (resCase_ == ResOneofCase.ThingResPart) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(ThingResPart);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(ResPart other) {
          if (other == null) {
            return;
          }
          if (other.ReqId.Length != 0) {
            ReqId = other.ReqId;
          }
          switch (other.ResCase) {
            case ResOneofCase.StreamResPart:
              if (StreamResPart == null) {
                StreamResPart = new global::GrpcServer.Transaction.Types.Stream.Types.ResPart();
              }
              StreamResPart.MergeFrom(other.StreamResPart);
              break;
            case ResOneofCase.QueryManagerResPart:
              if (QueryManagerResPart == null) {
                QueryManagerResPart = new global::GrpcServer.QueryManager.Types.ResPart();
              }
              QueryManagerResPart.MergeFrom(other.QueryManagerResPart);
              break;
            case ResOneofCase.LogicManagerResPart:
              if (LogicManagerResPart == null) {
                LogicManagerResPart = new global::GrpcServer.LogicManager.Types.ResPart();
              }
              LogicManagerResPart.MergeFrom(other.LogicManagerResPart);
              break;
            case ResOneofCase.TypeResPart:
              if (TypeResPart == null) {
                TypeResPart = new global::GrpcServer.Type.Types.ResPart();
              }
              TypeResPart.MergeFrom(other.TypeResPart);
              break;
            case ResOneofCase.ThingResPart:
              if (ThingResPart == null) {
                ThingResPart = new global::GrpcServer.Thing.Types.ResPart();
              }
              ThingResPart.MergeFrom(other.ThingResPart);
              break;
          }

          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                ReqId = input.ReadBytes();
                break;
              }
              case 18: {
                global::GrpcServer.Transaction.Types.Stream.Types.ResPart subBuilder = new global::GrpcServer.Transaction.Types.Stream.Types.ResPart();
                if (resCase_ == ResOneofCase.StreamResPart) {
                  subBuilder.MergeFrom(StreamResPart);
                }
                input.ReadMessage(subBuilder);
                StreamResPart = subBuilder;
                break;
              }
              case 26: {
                global::GrpcServer.QueryManager.Types.ResPart subBuilder = new global::GrpcServer.QueryManager.Types.ResPart();
                if (resCase_ == ResOneofCase.QueryManagerResPart) {
                  subBuilder.MergeFrom(QueryManagerResPart);
                }
                input.ReadMessage(subBuilder);
                QueryManagerResPart = subBuilder;
                break;
              }
              case 34: {
                global::GrpcServer.LogicManager.Types.ResPart subBuilder = new global::GrpcServer.LogicManager.Types.ResPart();
                if (resCase_ == ResOneofCase.LogicManagerResPart) {
                  subBuilder.MergeFrom(LogicManagerResPart);
                }
                input.ReadMessage(subBuilder);
                LogicManagerResPart = subBuilder;
                break;
              }
              case 42: {
                global::GrpcServer.Type.Types.ResPart subBuilder = new global::GrpcServer.Type.Types.ResPart();
                if (resCase_ == ResOneofCase.TypeResPart) {
                  subBuilder.MergeFrom(TypeResPart);
                }
                input.ReadMessage(subBuilder);
                TypeResPart = subBuilder;
                break;
              }
              case 50: {
                global::GrpcServer.Thing.Types.ResPart subBuilder = new global::GrpcServer.Thing.Types.ResPart();
                if (resCase_ == ResOneofCase.ThingResPart) {
                  subBuilder.MergeFrom(ThingResPart);
                }
                input.ReadMessage(subBuilder);
                ThingResPart = subBuilder;
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 10: {
                ReqId = input.ReadBytes();
                break;
              }
              case 18: {
                global::GrpcServer.Transaction.Types.Stream.Types.ResPart subBuilder = new global::GrpcServer.Transaction.Types.Stream.Types.ResPart();
                if (resCase_ == ResOneofCase.StreamResPart) {
                  subBuilder.MergeFrom(StreamResPart);
                }
                input.ReadMessage(subBuilder);
                StreamResPart = subBuilder;
                break;
              }
              case 26: {
                global::GrpcServer.QueryManager.Types.ResPart subBuilder = new global::GrpcServer.QueryManager.Types.ResPart();
                if (resCase_ == ResOneofCase.QueryManagerResPart) {
                  subBuilder.MergeFrom(QueryManagerResPart);
                }
                input.ReadMessage(subBuilder);
                QueryManagerResPart = subBuilder;
                break;
              }
              case 34: {
                global::GrpcServer.LogicManager.Types.ResPart subBuilder = new global::GrpcServer.LogicManager.Types.ResPart();
                if (resCase_ == ResOneofCase.LogicManagerResPart) {
                  subBuilder.MergeFrom(LogicManagerResPart);
                }
                input.ReadMessage(subBuilder);
                LogicManagerResPart = subBuilder;
                break;
              }
              case 42: {
                global::GrpcServer.Type.Types.ResPart subBuilder = new global::GrpcServer.Type.Types.ResPart();
                if (resCase_ == ResOneofCase.TypeResPart) {
                  subBuilder.MergeFrom(TypeResPart);
                }
                input.ReadMessage(subBuilder);
                TypeResPart = subBuilder;
                break;
              }
              case 50: {
                global::GrpcServer.Thing.Types.ResPart subBuilder = new global::GrpcServer.Thing.Types.ResPart();
                if (resCase_ == ResOneofCase.ThingResPart) {
                  subBuilder.MergeFrom(ThingResPart);
                }
                input.ReadMessage(subBuilder);
                ThingResPart = subBuilder;
                break;
              }
            }
          }
        }
        #endif

      }

      public sealed partial class Open : pb::IMessage<Open>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<Open> _parser = new pb::MessageParser<Open>(() => new Open());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<Open> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::GrpcServer.Transaction.Descriptor.NestedTypes[5]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Open() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Open(Open other) : this() {
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Open Clone() {
          return new Open(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as Open);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(Open other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(Open other) {
          if (other == null) {
            return;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
            }
          }
        }
        #endif

        #region Nested types
        /// <summary>Container for nested types declared in the Open message type.</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static partial class Types {
          public sealed partial class Req : pb::IMessage<Req>
          #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              , pb::IBufferMessage
          #endif
          {
            private static readonly pb::MessageParser<Req> _parser = new pb::MessageParser<Req>(() => new Req());
            private pb::UnknownFieldSet _unknownFields;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pb::MessageParser<Req> Parser { get { return _parser; } }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pbr::MessageDescriptor Descriptor {
              get { return global::GrpcServer.Transaction.Types.Open.Descriptor.NestedTypes[0]; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            pbr::MessageDescriptor pb::IMessage.Descriptor {
              get { return Descriptor; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public Req() {
              OnConstruction();
            }

            partial void OnConstruction();

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public Req(Req other) : this() {
              sessionId_ = other.sessionId_;
              type_ = other.type_;
              options_ = other.options_ != null ? other.options_.Clone() : null;
              networkLatencyMillis_ = other.networkLatencyMillis_;
              _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public Req Clone() {
              return new Req(this);
            }

            /// <summary>Field number for the "session_id" field.</summary>
            public const int SessionIdFieldNumber = 1;
            private pb::ByteString sessionId_ = pb::ByteString.Empty;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public pb::ByteString SessionId {
              get { return sessionId_; }
              set {
                sessionId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
              }
            }

            /// <summary>Field number for the "type" field.</summary>
            public const int TypeFieldNumber = 2;
            private global::GrpcServer.Transaction.Types.Type type_ = global::GrpcServer.Transaction.Types.Type.Read;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public global::GrpcServer.Transaction.Types.Type Type {
              get { return type_; }
              set {
                type_ = value;
              }
            }

            /// <summary>Field number for the "options" field.</summary>
            public const int OptionsFieldNumber = 3;
            private global::GrpcServer.Options options_;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public global::GrpcServer.Options Options {
              get { return options_; }
              set {
                options_ = value;
              }
            }

            /// <summary>Field number for the "network_latency_millis" field.</summary>
            public const int NetworkLatencyMillisFieldNumber = 4;
            private int networkLatencyMillis_;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public int NetworkLatencyMillis {
              get { return networkLatencyMillis_; }
              set {
                networkLatencyMillis_ = value;
              }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override bool Equals(object other) {
              return Equals(other as Req);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public bool Equals(Req other) {
              if (ReferenceEquals(other, null)) {
                return false;
              }
              if (ReferenceEquals(other, this)) {
                return true;
              }
              if (SessionId != other.SessionId) return false;
              if (Type != other.Type) return false;
              if (!object.Equals(Options, other.Options)) return false;
              if (NetworkLatencyMillis != other.NetworkLatencyMillis) return false;
              return Equals(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override int GetHashCode() {
              int hash = 1;
              if (SessionId.Length != 0) hash ^= SessionId.GetHashCode();
              if (Type != global::GrpcServer.Transaction.Types.Type.Read) hash ^= Type.GetHashCode();
              if (options_ != null) hash ^= Options.GetHashCode();
              if (NetworkLatencyMillis != 0) hash ^= NetworkLatencyMillis.GetHashCode();
              if (_unknownFields != null) {
                hash ^= _unknownFields.GetHashCode();
              }
              return hash;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override string ToString() {
              return pb::JsonFormatter.ToDiagnosticString(this);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void WriteTo(pb::CodedOutputStream output) {
            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              output.WriteRawMessage(this);
            #else
              if (SessionId.Length != 0) {
                output.WriteRawTag(10);
                output.WriteBytes(SessionId);
              }
              if (Type != global::GrpcServer.Transaction.Types.Type.Read) {
                output.WriteRawTag(16);
                output.WriteEnum((int) Type);
              }
              if (options_ != null) {
                output.WriteRawTag(26);
                output.WriteMessage(Options);
              }
              if (NetworkLatencyMillis != 0) {
                output.WriteRawTag(32);
                output.WriteInt32(NetworkLatencyMillis);
              }
              if (_unknownFields != null) {
                _unknownFields.WriteTo(output);
              }
            #endif
            }

            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
              if (SessionId.Length != 0) {
                output.WriteRawTag(10);
                output.WriteBytes(SessionId);
              }
              if (Type != global::GrpcServer.Transaction.Types.Type.Read) {
                output.WriteRawTag(16);
                output.WriteEnum((int) Type);
              }
              if (options_ != null) {
                output.WriteRawTag(26);
                output.WriteMessage(Options);
              }
              if (NetworkLatencyMillis != 0) {
                output.WriteRawTag(32);
                output.WriteInt32(NetworkLatencyMillis);
              }
              if (_unknownFields != null) {
                _unknownFields.WriteTo(ref output);
              }
            }
            #endif

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public int CalculateSize() {
              int size = 0;
              if (SessionId.Length != 0) {
                size += 1 + pb::CodedOutputStream.ComputeBytesSize(SessionId);
              }
              if (Type != global::GrpcServer.Transaction.Types.Type.Read) {
                size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Type);
              }
              if (options_ != null) {
                size += 1 + pb::CodedOutputStream.ComputeMessageSize(Options);
              }
              if (NetworkLatencyMillis != 0) {
                size += 1 + pb::CodedOutputStream.ComputeInt32Size(NetworkLatencyMillis);
              }
              if (_unknownFields != null) {
                size += _unknownFields.CalculateSize();
              }
              return size;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(Req other) {
              if (other == null) {
                return;
              }
              if (other.SessionId.Length != 0) {
                SessionId = other.SessionId;
              }
              if (other.Type != global::GrpcServer.Transaction.Types.Type.Read) {
                Type = other.Type;
              }
              if (other.options_ != null) {
                if (options_ == null) {
                  Options = new global::GrpcServer.Options();
                }
                Options.MergeFrom(other.Options);
              }
              if (other.NetworkLatencyMillis != 0) {
                NetworkLatencyMillis = other.NetworkLatencyMillis;
              }
              _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(pb::CodedInputStream input) {
            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              input.ReadRawMessage(this);
            #else
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                    break;
                  case 10: {
                    SessionId = input.ReadBytes();
                    break;
                  }
                  case 16: {
                    Type = (global::GrpcServer.Transaction.Types.Type) input.ReadEnum();
                    break;
                  }
                  case 26: {
                    if (options_ == null) {
                      Options = new global::GrpcServer.Options();
                    }
                    input.ReadMessage(Options);
                    break;
                  }
                  case 32: {
                    NetworkLatencyMillis = input.ReadInt32();
                    break;
                  }
                }
              }
            #endif
            }

            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                    break;
                  case 10: {
                    SessionId = input.ReadBytes();
                    break;
                  }
                  case 16: {
                    Type = (global::GrpcServer.Transaction.Types.Type) input.ReadEnum();
                    break;
                  }
                  case 26: {
                    if (options_ == null) {
                      Options = new global::GrpcServer.Options();
                    }
                    input.ReadMessage(Options);
                    break;
                  }
                  case 32: {
                    NetworkLatencyMillis = input.ReadInt32();
                    break;
                  }
                }
              }
            }
            #endif

          }

          public sealed partial class Res : pb::IMessage<Res>
          #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              , pb::IBufferMessage
          #endif
          {
            private static readonly pb::MessageParser<Res> _parser = new pb::MessageParser<Res>(() => new Res());
            private pb::UnknownFieldSet _unknownFields;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pb::MessageParser<Res> Parser { get { return _parser; } }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pbr::MessageDescriptor Descriptor {
              get { return global::GrpcServer.Transaction.Types.Open.Descriptor.NestedTypes[1]; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            pbr::MessageDescriptor pb::IMessage.Descriptor {
              get { return Descriptor; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public Res() {
              OnConstruction();
            }

            partial void OnConstruction();

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public Res(Res other) : this() {
              _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public Res Clone() {
              return new Res(this);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override bool Equals(object other) {
              return Equals(other as Res);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public bool Equals(Res other) {
              if (ReferenceEquals(other, null)) {
                return false;
              }
              if (ReferenceEquals(other, this)) {
                return true;
              }
              return Equals(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override int GetHashCode() {
              int hash = 1;
              if (_unknownFields != null) {
                hash ^= _unknownFields.GetHashCode();
              }
              return hash;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override string ToString() {
              return pb::JsonFormatter.ToDiagnosticString(this);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void WriteTo(pb::CodedOutputStream output) {
            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              output.WriteRawMessage(this);
            #else
              if (_unknownFields != null) {
                _unknownFields.WriteTo(output);
              }
            #endif
            }

            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
              if (_unknownFields != null) {
                _unknownFields.WriteTo(ref output);
              }
            }
            #endif

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public int CalculateSize() {
              int size = 0;
              if (_unknownFields != null) {
                size += _unknownFields.CalculateSize();
              }
              return size;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(Res other) {
              if (other == null) {
                return;
              }
              _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(pb::CodedInputStream input) {
            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              input.ReadRawMessage(this);
            #else
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                    break;
                }
              }
            #endif
            }

            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                    break;
                }
              }
            }
            #endif

          }

        }
        #endregion

      }

      public sealed partial class Stream : pb::IMessage<Stream>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<Stream> _parser = new pb::MessageParser<Stream>(() => new Stream());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<Stream> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::GrpcServer.Transaction.Descriptor.NestedTypes[6]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Stream() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Stream(Stream other) : this() {
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Stream Clone() {
          return new Stream(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as Stream);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(Stream other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(Stream other) {
          if (other == null) {
            return;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
            }
          }
        }
        #endif

        #region Nested types
        /// <summary>Container for nested types declared in the Stream message type.</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static partial class Types {
          public enum State {
            [pbr::OriginalName("CONTINUE")] Continue = 0,
            [pbr::OriginalName("DONE")] Done = 1,
          }

          public sealed partial class Req : pb::IMessage<Req>
          #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              , pb::IBufferMessage
          #endif
          {
            private static readonly pb::MessageParser<Req> _parser = new pb::MessageParser<Req>(() => new Req());
            private pb::UnknownFieldSet _unknownFields;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pb::MessageParser<Req> Parser { get { return _parser; } }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pbr::MessageDescriptor Descriptor {
              get { return global::GrpcServer.Transaction.Types.Stream.Descriptor.NestedTypes[0]; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            pbr::MessageDescriptor pb::IMessage.Descriptor {
              get { return Descriptor; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public Req() {
              OnConstruction();
            }

            partial void OnConstruction();

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public Req(Req other) : this() {
              _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public Req Clone() {
              return new Req(this);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override bool Equals(object other) {
              return Equals(other as Req);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public bool Equals(Req other) {
              if (ReferenceEquals(other, null)) {
                return false;
              }
              if (ReferenceEquals(other, this)) {
                return true;
              }
              return Equals(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override int GetHashCode() {
              int hash = 1;
              if (_unknownFields != null) {
                hash ^= _unknownFields.GetHashCode();
              }
              return hash;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override string ToString() {
              return pb::JsonFormatter.ToDiagnosticString(this);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void WriteTo(pb::CodedOutputStream output) {
            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              output.WriteRawMessage(this);
            #else
              if (_unknownFields != null) {
                _unknownFields.WriteTo(output);
              }
            #endif
            }

            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
              if (_unknownFields != null) {
                _unknownFields.WriteTo(ref output);
              }
            }
            #endif

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public int CalculateSize() {
              int size = 0;
              if (_unknownFields != null) {
                size += _unknownFields.CalculateSize();
              }
              return size;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(Req other) {
              if (other == null) {
                return;
              }
              _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(pb::CodedInputStream input) {
            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              input.ReadRawMessage(this);
            #else
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                    break;
                }
              }
            #endif
            }

            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                    break;
                }
              }
            }
            #endif

          }

          public sealed partial class ResPart : pb::IMessage<ResPart>
          #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              , pb::IBufferMessage
          #endif
          {
            private static readonly pb::MessageParser<ResPart> _parser = new pb::MessageParser<ResPart>(() => new ResPart());
            private pb::UnknownFieldSet _unknownFields;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pb::MessageParser<ResPart> Parser { get { return _parser; } }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pbr::MessageDescriptor Descriptor {
              get { return global::GrpcServer.Transaction.Types.Stream.Descriptor.NestedTypes[1]; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            pbr::MessageDescriptor pb::IMessage.Descriptor {
              get { return Descriptor; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public ResPart() {
              OnConstruction();
            }

            partial void OnConstruction();

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public ResPart(ResPart other) : this() {
              state_ = other.state_;
              _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public ResPart Clone() {
              return new ResPart(this);
            }

            /// <summary>Field number for the "state" field.</summary>
            public const int StateFieldNumber = 1;
            private global::GrpcServer.Transaction.Types.Stream.Types.State state_ = global::GrpcServer.Transaction.Types.Stream.Types.State.Continue;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public global::GrpcServer.Transaction.Types.Stream.Types.State State {
              get { return state_; }
              set {
                state_ = value;
              }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override bool Equals(object other) {
              return Equals(other as ResPart);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public bool Equals(ResPart other) {
              if (ReferenceEquals(other, null)) {
                return false;
              }
              if (ReferenceEquals(other, this)) {
                return true;
              }
              if (State != other.State) return false;
              return Equals(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override int GetHashCode() {
              int hash = 1;
              if (State != global::GrpcServer.Transaction.Types.Stream.Types.State.Continue) hash ^= State.GetHashCode();
              if (_unknownFields != null) {
                hash ^= _unknownFields.GetHashCode();
              }
              return hash;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override string ToString() {
              return pb::JsonFormatter.ToDiagnosticString(this);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void WriteTo(pb::CodedOutputStream output) {
            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              output.WriteRawMessage(this);
            #else
              if (State != global::GrpcServer.Transaction.Types.Stream.Types.State.Continue) {
                output.WriteRawTag(8);
                output.WriteEnum((int) State);
              }
              if (_unknownFields != null) {
                _unknownFields.WriteTo(output);
              }
            #endif
            }

            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
              if (State != global::GrpcServer.Transaction.Types.Stream.Types.State.Continue) {
                output.WriteRawTag(8);
                output.WriteEnum((int) State);
              }
              if (_unknownFields != null) {
                _unknownFields.WriteTo(ref output);
              }
            }
            #endif

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public int CalculateSize() {
              int size = 0;
              if (State != global::GrpcServer.Transaction.Types.Stream.Types.State.Continue) {
                size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) State);
              }
              if (_unknownFields != null) {
                size += _unknownFields.CalculateSize();
              }
              return size;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(ResPart other) {
              if (other == null) {
                return;
              }
              if (other.State != global::GrpcServer.Transaction.Types.Stream.Types.State.Continue) {
                State = other.State;
              }
              _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(pb::CodedInputStream input) {
            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              input.ReadRawMessage(this);
            #else
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                    break;
                  case 8: {
                    State = (global::GrpcServer.Transaction.Types.Stream.Types.State) input.ReadEnum();
                    break;
                  }
                }
              }
            #endif
            }

            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                    break;
                  case 8: {
                    State = (global::GrpcServer.Transaction.Types.Stream.Types.State) input.ReadEnum();
                    break;
                  }
                }
              }
            }
            #endif

          }

        }
        #endregion

      }

      public sealed partial class Commit : pb::IMessage<Commit>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<Commit> _parser = new pb::MessageParser<Commit>(() => new Commit());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<Commit> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::GrpcServer.Transaction.Descriptor.NestedTypes[7]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Commit() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Commit(Commit other) : this() {
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Commit Clone() {
          return new Commit(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as Commit);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(Commit other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(Commit other) {
          if (other == null) {
            return;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
            }
          }
        }
        #endif

        #region Nested types
        /// <summary>Container for nested types declared in the Commit message type.</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static partial class Types {
          public sealed partial class Req : pb::IMessage<Req>
          #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              , pb::IBufferMessage
          #endif
          {
            private static readonly pb::MessageParser<Req> _parser = new pb::MessageParser<Req>(() => new Req());
            private pb::UnknownFieldSet _unknownFields;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pb::MessageParser<Req> Parser { get { return _parser; } }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pbr::MessageDescriptor Descriptor {
              get { return global::GrpcServer.Transaction.Types.Commit.Descriptor.NestedTypes[0]; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            pbr::MessageDescriptor pb::IMessage.Descriptor {
              get { return Descriptor; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public Req() {
              OnConstruction();
            }

            partial void OnConstruction();

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public Req(Req other) : this() {
              _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public Req Clone() {
              return new Req(this);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override bool Equals(object other) {
              return Equals(other as Req);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public bool Equals(Req other) {
              if (ReferenceEquals(other, null)) {
                return false;
              }
              if (ReferenceEquals(other, this)) {
                return true;
              }
              return Equals(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override int GetHashCode() {
              int hash = 1;
              if (_unknownFields != null) {
                hash ^= _unknownFields.GetHashCode();
              }
              return hash;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override string ToString() {
              return pb::JsonFormatter.ToDiagnosticString(this);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void WriteTo(pb::CodedOutputStream output) {
            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              output.WriteRawMessage(this);
            #else
              if (_unknownFields != null) {
                _unknownFields.WriteTo(output);
              }
            #endif
            }

            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
              if (_unknownFields != null) {
                _unknownFields.WriteTo(ref output);
              }
            }
            #endif

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public int CalculateSize() {
              int size = 0;
              if (_unknownFields != null) {
                size += _unknownFields.CalculateSize();
              }
              return size;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(Req other) {
              if (other == null) {
                return;
              }
              _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(pb::CodedInputStream input) {
            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              input.ReadRawMessage(this);
            #else
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                    break;
                }
              }
            #endif
            }

            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                    break;
                }
              }
            }
            #endif

          }

          public sealed partial class Res : pb::IMessage<Res>
          #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              , pb::IBufferMessage
          #endif
          {
            private static readonly pb::MessageParser<Res> _parser = new pb::MessageParser<Res>(() => new Res());
            private pb::UnknownFieldSet _unknownFields;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pb::MessageParser<Res> Parser { get { return _parser; } }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pbr::MessageDescriptor Descriptor {
              get { return global::GrpcServer.Transaction.Types.Commit.Descriptor.NestedTypes[1]; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            pbr::MessageDescriptor pb::IMessage.Descriptor {
              get { return Descriptor; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public Res() {
              OnConstruction();
            }

            partial void OnConstruction();

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public Res(Res other) : this() {
              _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public Res Clone() {
              return new Res(this);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override bool Equals(object other) {
              return Equals(other as Res);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public bool Equals(Res other) {
              if (ReferenceEquals(other, null)) {
                return false;
              }
              if (ReferenceEquals(other, this)) {
                return true;
              }
              return Equals(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override int GetHashCode() {
              int hash = 1;
              if (_unknownFields != null) {
                hash ^= _unknownFields.GetHashCode();
              }
              return hash;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override string ToString() {
              return pb::JsonFormatter.ToDiagnosticString(this);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void WriteTo(pb::CodedOutputStream output) {
            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              output.WriteRawMessage(this);
            #else
              if (_unknownFields != null) {
                _unknownFields.WriteTo(output);
              }
            #endif
            }

            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
              if (_unknownFields != null) {
                _unknownFields.WriteTo(ref output);
              }
            }
            #endif

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public int CalculateSize() {
              int size = 0;
              if (_unknownFields != null) {
                size += _unknownFields.CalculateSize();
              }
              return size;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(Res other) {
              if (other == null) {
                return;
              }
              _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(pb::CodedInputStream input) {
            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              input.ReadRawMessage(this);
            #else
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                    break;
                }
              }
            #endif
            }

            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                    break;
                }
              }
            }
            #endif

          }

        }
        #endregion

      }

      public sealed partial class Rollback : pb::IMessage<Rollback>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<Rollback> _parser = new pb::MessageParser<Rollback>(() => new Rollback());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<Rollback> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::GrpcServer.Transaction.Descriptor.NestedTypes[8]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Rollback() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Rollback(Rollback other) : this() {
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Rollback Clone() {
          return new Rollback(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as Rollback);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(Rollback other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(Rollback other) {
          if (other == null) {
            return;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
            }
          }
        }
        #endif

        #region Nested types
        /// <summary>Container for nested types declared in the Rollback message type.</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static partial class Types {
          public sealed partial class Req : pb::IMessage<Req>
          #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              , pb::IBufferMessage
          #endif
          {
            private static readonly pb::MessageParser<Req> _parser = new pb::MessageParser<Req>(() => new Req());
            private pb::UnknownFieldSet _unknownFields;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pb::MessageParser<Req> Parser { get { return _parser; } }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pbr::MessageDescriptor Descriptor {
              get { return global::GrpcServer.Transaction.Types.Rollback.Descriptor.NestedTypes[0]; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            pbr::MessageDescriptor pb::IMessage.Descriptor {
              get { return Descriptor; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public Req() {
              OnConstruction();
            }

            partial void OnConstruction();

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public Req(Req other) : this() {
              _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public Req Clone() {
              return new Req(this);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override bool Equals(object other) {
              return Equals(other as Req);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public bool Equals(Req other) {
              if (ReferenceEquals(other, null)) {
                return false;
              }
              if (ReferenceEquals(other, this)) {
                return true;
              }
              return Equals(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override int GetHashCode() {
              int hash = 1;
              if (_unknownFields != null) {
                hash ^= _unknownFields.GetHashCode();
              }
              return hash;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override string ToString() {
              return pb::JsonFormatter.ToDiagnosticString(this);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void WriteTo(pb::CodedOutputStream output) {
            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              output.WriteRawMessage(this);
            #else
              if (_unknownFields != null) {
                _unknownFields.WriteTo(output);
              }
            #endif
            }

            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
              if (_unknownFields != null) {
                _unknownFields.WriteTo(ref output);
              }
            }
            #endif

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public int CalculateSize() {
              int size = 0;
              if (_unknownFields != null) {
                size += _unknownFields.CalculateSize();
              }
              return size;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(Req other) {
              if (other == null) {
                return;
              }
              _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(pb::CodedInputStream input) {
            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              input.ReadRawMessage(this);
            #else
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                    break;
                }
              }
            #endif
            }

            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                    break;
                }
              }
            }
            #endif

          }

          public sealed partial class Res : pb::IMessage<Res>
          #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              , pb::IBufferMessage
          #endif
          {
            private static readonly pb::MessageParser<Res> _parser = new pb::MessageParser<Res>(() => new Res());
            private pb::UnknownFieldSet _unknownFields;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pb::MessageParser<Res> Parser { get { return _parser; } }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pbr::MessageDescriptor Descriptor {
              get { return global::GrpcServer.Transaction.Types.Rollback.Descriptor.NestedTypes[1]; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            pbr::MessageDescriptor pb::IMessage.Descriptor {
              get { return Descriptor; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public Res() {
              OnConstruction();
            }

            partial void OnConstruction();

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public Res(Res other) : this() {
              _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public Res Clone() {
              return new Res(this);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override bool Equals(object other) {
              return Equals(other as Res);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public bool Equals(Res other) {
              if (ReferenceEquals(other, null)) {
                return false;
              }
              if (ReferenceEquals(other, this)) {
                return true;
              }
              return Equals(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override int GetHashCode() {
              int hash = 1;
              if (_unknownFields != null) {
                hash ^= _unknownFields.GetHashCode();
              }
              return hash;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override string ToString() {
              return pb::JsonFormatter.ToDiagnosticString(this);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void WriteTo(pb::CodedOutputStream output) {
            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              output.WriteRawMessage(this);
            #else
              if (_unknownFields != null) {
                _unknownFields.WriteTo(output);
              }
            #endif
            }

            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
              if (_unknownFields != null) {
                _unknownFields.WriteTo(ref output);
              }
            }
            #endif

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public int CalculateSize() {
              int size = 0;
              if (_unknownFields != null) {
                size += _unknownFields.CalculateSize();
              }
              return size;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(Res other) {
              if (other == null) {
                return;
              }
              _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(pb::CodedInputStream input) {
            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              input.ReadRawMessage(this);
            #else
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                    break;
                }
              }
            #endif
            }

            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                    break;
                }
              }
            }
            #endif

          }

        }
        #endregion

      }

    }
    #endregion

  }

  #endregion

}

#endregion Designer generated code
